Shader "TextMeshPro/Distance Field (Surface)" {
	Properties {
		_FaceTex ("Fill Texture", 2D) = "white" {}
		_FaceUVSpeedX ("Face UV Speed X", Range(-5, 5)) = 0
		_FaceUVSpeedY ("Face UV Speed Y", Range(-5, 5)) = 0
		_FaceColor ("Fill Color", Vector) = (1,1,1,1)
		_FaceDilate ("Face Dilate", Range(-1, 1)) = 0
		_OutlineColor ("Outline Color", Vector) = (0,0,0,1)
		_OutlineTex ("Outline Texture", 2D) = "white" {}
		_OutlineUVSpeedX ("Outline UV Speed X", Range(-5, 5)) = 0
		_OutlineUVSpeedY ("Outline UV Speed Y", Range(-5, 5)) = 0
		_OutlineWidth ("Outline Thickness", Range(0, 1)) = 0
		_OutlineSoftness ("Outline Softness", Range(0, 1)) = 0
		_Bevel ("Bevel", Range(0, 1)) = 0.5
		_BevelOffset ("Bevel Offset", Range(-0.5, 0.5)) = 0
		_BevelWidth ("Bevel Width", Range(-0.5, 0.5)) = 0
		_BevelClamp ("Bevel Clamp", Range(0, 1)) = 0
		_BevelRoundness ("Bevel Roundness", Range(0, 1)) = 0
		_BumpMap ("Normalmap", 2D) = "bump" {}
		_BumpOutline ("Bump Outline", Range(0, 1)) = 0.5
		_BumpFace ("Bump Face", Range(0, 1)) = 0.5
		_ReflectFaceColor ("Face Color", Vector) = (0,0,0,1)
		_ReflectOutlineColor ("Outline Color", Vector) = (0,0,0,1)
		_Cube ("Reflection Cubemap", Cube) = "black" {}
		_EnvMatrixRotation ("Texture Rotation", Vector) = (0,0,0,0)
		_SpecColor ("Specular Color", Vector) = (0,0,0,1)
		_FaceShininess ("Face Shininess", Range(0, 1)) = 0
		_OutlineShininess ("Outline Shininess", Range(0, 1)) = 0
		_GlowColor ("Color", Vector) = (0,1,0,0.5)
		_GlowOffset ("Offset", Range(-1, 1)) = 0
		_GlowInner ("Inner", Range(0, 1)) = 0.05
		_GlowOuter ("Outer", Range(0, 1)) = 0.05
		_GlowPower ("Falloff", Range(1, 0)) = 0.75
		_WeightNormal ("Weight Normal", Float) = 0
		_WeightBold ("Weight Bold", Float) = 0.5
		_ShaderFlags ("Flags", Float) = 0
		_ScaleRatioA ("Scale RatioA", Float) = 1
		_ScaleRatioB ("Scale RatioB", Float) = 1
		_ScaleRatioC ("Scale RatioC", Float) = 1
		_MainTex ("Font Atlas", 2D) = "white" {}
		_TextureWidth ("Texture Width", Float) = 512
		_TextureHeight ("Texture Height", Float) = 512
		_GradientScale ("Gradient Scale", Float) = 5
		_ScaleX ("Scale X", Float) = 1
		_ScaleY ("Scale Y", Float) = 1
		_PerspectiveFilter ("Perspective Correction", Range(0, 1)) = 0.875
		_VertexOffsetX ("Vertex OffsetX", Float) = 0
		_VertexOffsetY ("Vertex OffsetY", Float) = 0
	}
	SubShader {
		LOD 300
		Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
		Pass {
			Name "FORWARD"
			LOD 300
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha OneMinusSrcAlpha, SrcAlpha OneMinusSrcAlpha
			ColorMask RGB -1
			ZWrite Off
			Cull Off
			GpuProgramID 38978
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 5     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_temps 5
					add r0.xy, v0.xyxx, cb0[25].zwzz
					mul r1.xyzw, r0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[3].xyzw
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					mul r3.xyzw, r2.yyyy, cb4[18].xyzw
					mad r3.xyzw, cb4[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb4[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb4[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[33].xxxy, cb0[33].zzzw
					mad o2.xy, r3.xyxx, cb0[34].xyxx, cb0[34].zwzz
					mad o1.xy, v3.xyxx, cb0[32].xyxx, cb0[32].zwzz
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r1.w, -cb0[24].y, cb0[24].z
					mad r0.w, r0.w, r1.w, cb0[24].y
					mad r0.w, r0.w, l(0.250000), cb0[6].x
					mul r0.w, r0.w, cb0[24].w
					mul o2.z, r0.w, l(0.500000)
					mul r0.w, r2.y, cb4[18].w
					mad r0.w, cb4[17].w, r2.x, r0.w
					mad r0.w, cb4[19].w, r2.z, r0.w
					mad r0.w, cb4[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb4[6].xyxx
					mad r2.xy, cb4[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[30].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[30].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[30].w, l(1.000000)
					mul r1.w, r1.w, r2.x
					mad r0.w, r0.w, l(1.500000), -r1.w
					mul r2.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r2.xyz, cb3[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb3[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb3[7].xyzx
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.xyzx
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r2.x, r0.xyzx, cb3[4].xyzx
					dp3 r2.y, r0.xyzx, cb3[5].xyzx
					dp3 r2.z, r0.xyzx, cb3[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					add r0.xyz, -r1.xyzx, cb1[4].xyzx
					dp3 r3.x, r0.xyzx, r0.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r0.xyzx, r3.xxxx
					dp3 r3.x, r2.xywx, r3.xyzx
					mad o2.w, |r3.x|, r0.w, r1.w
					mov o3.w, r1.x
					mul r3.xyz, v1.yyyy, cb3[1].yzxy
					mad r3.xyz, cb3[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.wxyw, r3.xyzx
					mad r4.xyz, r2.ywxy, r3.yzxy, -r4.xyzx
					mul r0.w, v1.w, cb3[9].w
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o3.y, r4.x
					mov o3.z, r2.x
					mov o3.x, r3.z
					mov o4.x, r3.x
					mov o5.x, r3.y
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o4.z, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o5.z, r2.w
					mov o6.xyzw, v7.xyzw
					mul r1.xyz, r0.yyyy, cb0[14].xyzx
					mad r0.xyw, cb0[13].xyxz, r0.xxxx, r1.xyxz
					mad o7.xyz, cb0[15].xyzx, r0.zzzz, r0.xywx
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o8.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 5     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_temps 5
					add r0.xy, v0.xyxx, cb0[25].zwzz
					mul r1.xyzw, r0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[3].xyzw
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					mul r3.xyzw, r2.yyyy, cb4[18].xyzw
					mad r3.xyzw, cb4[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb4[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb4[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[33].xxxy, cb0[33].zzzw
					mad o2.xy, r3.xyxx, cb0[34].xyxx, cb0[34].zwzz
					mad o1.xy, v3.xyxx, cb0[32].xyxx, cb0[32].zwzz
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r1.w, -cb0[24].y, cb0[24].z
					mad r0.w, r0.w, r1.w, cb0[24].y
					mad r0.w, r0.w, l(0.250000), cb0[6].x
					mul r0.w, r0.w, cb0[24].w
					mul o2.z, r0.w, l(0.500000)
					mul r0.w, r2.y, cb4[18].w
					mad r0.w, cb4[17].w, r2.x, r0.w
					mad r0.w, cb4[19].w, r2.z, r0.w
					mad r0.w, cb4[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb4[6].xyxx
					mad r2.xy, cb4[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[30].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[30].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[30].w, l(1.000000)
					mul r1.w, r1.w, r2.x
					mad r0.w, r0.w, l(1.500000), -r1.w
					mul r2.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r2.xyz, cb3[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb3[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb3[7].xyzx
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.xyzx
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r2.x, r0.xyzx, cb3[4].xyzx
					dp3 r2.y, r0.xyzx, cb3[5].xyzx
					dp3 r2.z, r0.xyzx, cb3[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					add r0.xyz, -r1.xyzx, cb1[4].xyzx
					dp3 r3.x, r0.xyzx, r0.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r0.xyzx, r3.xxxx
					dp3 r3.x, r2.xywx, r3.xyzx
					mad o2.w, |r3.x|, r0.w, r1.w
					mov o3.w, r1.x
					mul r3.xyz, v1.yyyy, cb3[1].yzxy
					mad r3.xyz, cb3[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.wxyw, r3.xyzx
					mad r4.xyz, r2.ywxy, r3.yzxy, -r4.xyzx
					mul r0.w, v1.w, cb3[9].w
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o3.y, r4.x
					mov o3.z, r2.x
					mov o3.x, r3.z
					mov o4.x, r3.x
					mov o5.x, r3.y
					mov o4.w, r1.y
					mov o5.w, r1.z
					mov o4.z, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o5.z, r2.w
					mov o6.xyzw, v7.xyzw
					mul r1.xyz, r0.yyyy, cb0[14].xyzx
					mad r0.xyw, cb0[13].xyxz, r0.xxxx, r1.xyxz
					mad o7.xyz, cb0[15].xyzx, r0.zzzz, r0.xywx
					mul r0.x, r2.y, r2.y
					mad r0.x, r2.x, r2.x, -r0.x
					mul r1.xyzw, r2.ywzx, r2.xyzw
					dp4 r2.x, cb2[42].xyzw, r1.xyzw
					dp4 r2.y, cb2[43].xyzw, r1.xyzw
					dp4 r2.z, cb2[44].xyzw, r1.xyzw
					mad o8.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 5     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[46], immediateIndexed
					dcl_constantbuffer CB3[10], immediateIndexed
					dcl_constantbuffer CB4[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyzw
					dcl_output o6.xyzw
					dcl_output o7.xyz
					dcl_output o8.xyz
					dcl_temps 5
					add r0.xy, v0.xyxx, cb0[25].zwzz
					mul r1.xyzw, r0.yyyy, cb3[1].xyzw
					mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb3[3].xyzw
					mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
					mul r3.xyzw, r2.yyyy, cb4[18].xyzw
					mad r3.xyzw, cb4[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb4[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb4[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[33].xxxy, cb0[33].zzzw
					mad o2.xy, r3.xyxx, cb0[34].xyxx, cb0[34].zwzz
					mad o1.xy, v3.xyxx, cb0[32].xyxx, cb0[32].zwzz
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r1.w, -cb0[24].y, cb0[24].z
					mad r0.w, r0.w, r1.w, cb0[24].y
					mad r0.w, r0.w, l(0.250000), cb0[6].x
					mul r0.w, r0.w, cb0[24].w
					mul o2.z, r0.w, l(0.500000)
					mul r0.w, r2.y, cb4[18].w
					mad r0.w, cb4[17].w, r2.x, r0.w
					mad r0.w, cb4[19].w, r2.z, r0.w
					mad r0.w, cb4[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb4[6].xyxx
					mad r2.xy, cb4[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[30].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[30].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[30].w, l(1.000000)
					mul r1.w, r1.w, r2.x
					mad r0.w, r0.w, l(1.500000), -r1.w
					mul r2.xyz, cb1[4].yyyy, cb3[5].xyzx
					mad r2.xyz, cb3[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb3[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb3[7].xyzx
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.xyzx
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r2.x, r0.xyzx, cb3[4].xyzx
					dp3 r2.y, r0.xyzx, cb3[5].xyzx
					dp3 r2.z, r0.xyzx, cb3[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r2.xyzw, r0.xxxx, r2.xyzz
					add r0.xyz, -r1.xyzx, cb1[4].xyzx
					dp3 r3.x, r0.xyzx, r0.xyzx
					rsq r3.x, r3.x
					mul r3.xyz, r0.xyzx, r3.xxxx
					dp3 r3.x, r2.xywx, r3.xyzx
					mad o2.w, |r3.x|, r0.w, r1.w
					mul r3.xyz, v1.yyyy, cb3[1].yzxy
					mad r3.xyz, cb3[0].yzxy, v1.xxxx, r3.xyzx
					mad r3.xyz, cb3[2].yzxy, v1.zzzz, r3.xyzx
					dp3 r0.w, r3.xyzx, r3.xyzx
					rsq r0.w, r0.w
					mul r3.xyz, r0.wwww, r3.xyzx
					mul r4.xyz, r2.wxyw, r3.xyzx
					mad r4.xyz, r2.ywxy, r3.yzxy, -r4.xyzx
					mul r0.w, v1.w, cb3[9].w
					mul r4.xyz, r0.wwww, r4.xyzx
					mov o3.y, r4.x
					mov o3.z, r2.x
					mov o3.x, r3.z
					mov o3.w, r1.x
					mov o4.x, r3.x
					mov o5.x, r3.y
					mov o4.z, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o4.w, r1.y
					mov o5.z, r2.w
					mov o5.w, r1.z
					mov o6.xyzw, v7.xyzw
					mul r3.xyz, r0.yyyy, cb0[14].xyzx
					mad r0.xyw, cb0[13].xyxz, r0.xxxx, r3.xyxz
					mad o7.xyz, cb0[15].xyzx, r0.zzzz, r0.xywx
					add r0.xyzw, -r1.yyyy, cb2[4].xyzw
					mul r3.xyzw, r2.yyyy, r0.xyzw
					mul r0.xyzw, r0.xyzw, r0.xyzw
					add r4.xyzw, -r1.xxxx, cb2[3].xyzw
					add r1.xyzw, -r1.zzzz, cb2[5].xyzw
					mad r3.xyzw, r4.xyzw, r2.xxxx, r3.xyzw
					mad r0.xyzw, r4.xyzw, r4.xyzw, r0.xyzw
					mad r0.xyzw, r1.xyzw, r1.xyzw, r0.xyzw
					mad r1.xyzw, r1.xyzw, r2.wwzw, r3.xyzw
					max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
					rsq r3.xyzw, r0.xyzw
					mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
					div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
					mul r1.xyzw, r1.xyzw, r3.xyzw
					max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.xyzw, r0.xyzw, r1.xyzw
					mul r1.xyz, r0.yyyy, cb2[8].xyzx
					mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
					mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
					mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
					mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
					mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
					mul r0.w, r2.y, r2.y
					mad r0.w, r2.x, r2.x, -r0.w
					mul r2.xyzw, r2.ywzx, r2.xyzw
					dp4 r3.x, cb2[42].xyzw, r2.xyzw
					dp4 r3.y, cb2[43].xyzw, r2.xyzw
					dp4 r3.z, cb2[44].xyzw, r2.xyzw
					mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
					mad o8.xyz, r0.xyzx, r1.xyzx, r2.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 5     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[3], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyzw
					dcl_input_ps linear v7.xyz
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, v5.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[29].zwzz
					mov r2.z, l(0)
					add r3.xyzw, -r2.xzzy, v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s5
					add r2.xyzw, r2.xzzy, v1.xyxy
					sample r5.xyzw, r2.xyxx, t0.xyzw, s5
					sample r3.xyzw, r3.zwzz, t0.xyzw, s5
					sample r2.xyzw, r2.zwzz, t0.xyzw, s5
					sample r6.xyzw, v1.xyxx, t0.xyzw, s5
					add r1.w, -r6.w, l(0.500000)
					add r1.w, r1.w, -v2.z
					mad r1.w, r1.w, v2.w, l(0.500000)
					mul r3.x, cb0[8].x, cb0[24].w
					mul r3.y, cb0[6].y, cb0[24].w
					mul r3.xz, r3.xxyx, v2.wwww
					mul r6.xyzw, v6.xyzw, cb0[5].xyzw
					mul r4.x, v6.w, cb0[7].w
					mad r4.yz, cb0[4].xxyx, cb1[0].yyyy, v1.zzwz
					sample r7.xyzw, r4.yzyy, t1.xyzw, s1
					mul r6.xyzw, r6.xyzw, r7.xyzw
					mad r4.yz, cb0[6].zzwz, cb1[0].yyyy, v2.xxyx
					sample r7.xyzw, r4.yzyy, t2.xyzw, s2
					mul r5.xyz, r7.xyzx, cb0[7].xyzx
					mul r7.w, r4.x, r7.w
					mad r4.x, -r3.x, l(0.500000), r1.w
					mad r3.z, r3.z, l(0.500000), r4.x
					mad r3.y, r3.y, v2.w, l(1.000000)
					div_sat r3.y, r3.z, r3.y
					add r3.y, -r3.y, l(1.000000)
					mad_sat r1.w, r3.x, l(0.500000), r1.w
					min r3.x, r3.x, l(1.000000)
					sqrt r3.x, r3.x
					mul r3.x, r1.w, r3.x
					mul r6.xyz, r6.wwww, r6.xyzx
					mul r7.xyz, r5.xyzx, r7.wwww
					add r7.xyzw, -r6.xyzw, r7.xyzw
					mad r6.xyzw, r3.xxxx, r7.xyzw, r6.xyzw
					mul r6.xyzw, r3.yyyy, r6.xyzw
					max r3.x, r6.w, l(0.000100)
					div r3.xyz, r6.xyzx, r3.xxxx
					mul r4.x, cb0[24].x, l(0.500000)
					ge r4.y, r4.x, -r4.x
					frc r4.x, |r4.x|
					movc r4.x, r4.y, r4.x, -r4.x
					ge r4.x, r4.x, l(0.500000)
					add r4.y, v2.z, cb0[8].z
					mov r2.x, r4.w
					mov r2.y, r5.w
					mov r2.z, r3.w
					add r2.xyzw, r4.yyyy, r2.xyzw
					add r3.w, cb0[8].w, cb0[8].x
					max r3.w, r3.w, l(0.010000)
					add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					div r2.xyzw, r2.xyzw, r3.wwww
					add_sat r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					mad r5.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					add r5.xyzw, -|r5.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					movc r2.xyzw, r4.xxxx, r5.xyzw, r2.xyzw
					mul r4.xyzw, r2.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
					sincos r4.xyzw, null, r4.xyzw
					add r4.xyzw, -r2.xyzw, r4.xyzw
					mad r2.xyzw, cb0[9].yyyy, r4.xyzw, r2.xyzw
					add r4.x, -cb0[9].x, l(1.000000)
					min r2.xyzw, r2.xyzw, r4.xxxx
					mul r3.w, r3.w, cb0[8].y
					mul r3.w, r3.w, cb0[30].x
					mul r3.w, r3.w, l(-2.000000)
					mul r2.xz, r2.xxzx, r3.wwww
					mad r2.yz, r2.wwyw, r3.wwww, -r2.zzxz
					mov r2.xw, l(-1.000000,0,0,1.000000)
					dp2 r2.w, r2.zwzz, r2.zwzz
					rsq r2.w, r2.w
					mul r4.yz, r2.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
					mul r4.x, r2.w, r2.z
					dp2 r2.w, r2.xyxx, r2.xyxx
					rsq r2.w, r2.w
					mov r2.z, l(0)
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r2.xyzx, r4.xyzx
					mad r2.xyz, r4.zxyz, r2.yzxy, -r5.xyzx
					sample r4.xyzw, v1.zwzz, t3.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r4.xyxx, r4.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r4.z, r2.w
					add r2.w, -cb0[9].w, cb0[9].z
					mad r2.w, r1.w, r2.w, cb0[9].w
					mad r4.xyz, r4.xyzx, r2.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
					mad r4.xyz, r6.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
					add r2.xyz, r2.xyzx, -r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r2.yyyy, cb3[1].xyzx
					mad r4.xyz, cb3[0].xyzx, r2.xxxx, r4.xyzx
					mad r4.xyz, cb3[2].xyzx, r2.zzzz, r4.xyzx
					dp3 r2.w, v7.xyzx, r4.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r4.xyzx, -r2.wwww, v7.xyzx
					sample r4.xyzw, r4.xyzx, t4.xyzw, s4
					add r5.xyz, -cb0[10].xyzx, cb0[11].xyzx
					mad r5.xyz, r1.wwww, r5.xyzx, cb0[10].xyzx
					mul r4.xyz, r4.xyzx, r5.xyzx
					add r2.w, -cb0[31].x, cb0[31].y
					mad r1.w, r1.w, r2.w, cb0[31].x
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r0.yzwy
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					dp3 r5.x, v3.xyzx, -r2.xyzx
					dp3 r5.y, v4.xyzx, -r2.xyzx
					dp3 r5.z, v5.xyzx, -r2.xyzx
					dp3 r2.x, r5.xyzx, r5.xyzx
					rsq r2.x, r2.x
					mul r5.xyz, r2.xxxx, r5.xyzx
					mul r2.xyz, r3.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb4[2].xyzx
					  mad r6.xyz, cb4[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb4[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb4[4].xyzx
					  movc r0.yzw, r2.wwww, r6.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb4[6].xxyz
					  mul r7.yzw, r0.yyzw, cb4[5].xxyz
					  mul r0.y, r7.y, l(0.250000)
					  mul r0.z, cb4[0].z, l(0.500000)
					  mad r0.w, -cb4[0].z, l(0.500000), l(0.250000)
					  max r0.y, r0.z, r0.y
					  min r7.x, r0.w, r0.y
					  sample r8.xyzw, r7.xzwx, t5.xyzw, s0
					  add r0.yzw, r7.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r9.xyzw, r0.yzwy, t5.xyzw, s0
					  add r0.yzw, r7.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r7.xyzw, r0.yzwy, t5.xyzw, s0
					  mov r5.w, l(1.000000)
					  dp4 r6.x, r8.xyzw, r5.xyzw
					  dp4 r6.y, r9.xyzw, r5.xyzw
					  dp4 r6.z, r7.xyzw, r5.xyzw
					else 
					  mov r5.w, l(1.000000)
					  dp4 r6.x, cb2[39].xyzw, r5.xyzw
					  dp4 r6.y, cb2[40].xyzw, r5.xyzw
					  dp4 r6.z, cb2[41].xyzw, r5.xyzw
					endif 
					add r0.yzw, r6.xxyz, v8.xxyz
					max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.yzw, r0.yyzw
					mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
					exp r0.yzw, r0.yyzw
					mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
					max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					dp3 r0.x, r5.xyzx, cb2[0].xyzx
					max r0.x, r0.x, l(0.000000)
					dp3 r1.x, r5.xyzx, r1.xyzx
					max r1.x, r1.x, l(0.000000)
					mul r1.y, r1.w, l(128.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r1.y
					exp r1.x, r1.x
					mul r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyz, r2.xyzx, cb0[3].xyzx
					mul r2.xyz, r1.xxxx, r2.xyzx
					mad r1.xyz, r1.yzwy, r0.xxxx, r2.xyzx
					mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
					mad o0.xyz, r4.xyzx, r6.wwww, r0.xyzx
					mov o0.w, r6.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 5     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
					// COLOR                    0   xyzw        6     NONE   float   xyzw
					// TEXCOORD                 6   xyz         7     NONE   float   xyz 
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[3], immediateIndexed
					dcl_constantbuffer CB4[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texturecube (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyzw
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v5.xyzw
					dcl_input_ps linear v6.xyzw
					dcl_input_ps linear v7.xyz
					dcl_input_ps linear v8.xyz
					dcl_output o0.xyzw
					dcl_temps 10
					mov r0.y, v3.w
					mov r0.z, v4.w
					mov r0.w, v5.w
					add r1.xyz, -r0.yzwy, cb1[4].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[29].zwzz
					mov r2.z, l(0)
					add r3.xyzw, -r2.xzzy, v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s5
					add r2.xyzw, r2.xzzy, v1.xyxy
					sample r5.xyzw, r2.xyxx, t0.xyzw, s5
					sample r3.xyzw, r3.zwzz, t0.xyzw, s5
					sample r2.xyzw, r2.zwzz, t0.xyzw, s5
					sample r6.xyzw, v1.xyxx, t0.xyzw, s5
					add r1.w, -r6.w, l(0.500000)
					add r1.w, r1.w, -v2.z
					mad r1.w, r1.w, v2.w, l(0.500000)
					mul r3.x, cb0[8].x, cb0[24].w
					mul r3.y, cb0[6].y, cb0[24].w
					mul r3.xz, r3.xxyx, v2.wwww
					mul r6.xyzw, v6.xyzw, cb0[5].xyzw
					mul r4.x, v6.w, cb0[7].w
					mad r4.yz, cb0[4].xxyx, cb1[0].yyyy, v1.zzwz
					sample r7.xyzw, r4.yzyy, t1.xyzw, s1
					mul r6.xyzw, r6.xyzw, r7.xyzw
					mad r4.yz, cb0[6].zzwz, cb1[0].yyyy, v2.xxyx
					sample r7.xyzw, r4.yzyy, t2.xyzw, s2
					mul r5.xyz, r7.xyzx, cb0[7].xyzx
					mul r7.w, r4.x, r7.w
					mad r4.x, -r3.x, l(0.500000), r1.w
					mad r3.z, r3.z, l(0.500000), r4.x
					mad r3.y, r3.y, v2.w, l(1.000000)
					div_sat r3.y, r3.z, r3.y
					add r3.y, -r3.y, l(1.000000)
					mad_sat r1.w, r3.x, l(0.500000), r1.w
					min r3.x, r3.x, l(1.000000)
					sqrt r3.x, r3.x
					mul r3.x, r1.w, r3.x
					mul r6.xyz, r6.wwww, r6.xyzx
					mul r7.xyz, r5.xyzx, r7.wwww
					add r7.xyzw, -r6.xyzw, r7.xyzw
					mad r6.xyzw, r3.xxxx, r7.xyzw, r6.xyzw
					mul r6.xyzw, r3.yyyy, r6.xyzw
					max r3.x, r6.w, l(0.000100)
					div r3.xyz, r6.xyzx, r3.xxxx
					mul r4.x, cb0[24].x, l(0.500000)
					ge r4.y, r4.x, -r4.x
					frc r4.x, |r4.x|
					movc r4.x, r4.y, r4.x, -r4.x
					ge r4.x, r4.x, l(0.500000)
					add r4.y, v2.z, cb0[8].z
					mov r2.x, r4.w
					mov r2.y, r5.w
					mov r2.z, r3.w
					add r2.xyzw, r4.yyyy, r2.xyzw
					add r3.w, cb0[8].w, cb0[8].x
					max r3.w, r3.w, l(0.010000)
					add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					div r2.xyzw, r2.xyzw, r3.wwww
					add_sat r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					mad r5.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					add r5.xyzw, -|r5.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					movc r2.xyzw, r4.xxxx, r5.xyzw, r2.xyzw
					mul r4.xyzw, r2.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
					sincos r4.xyzw, null, r4.xyzw
					add r4.xyzw, -r2.xyzw, r4.xyzw
					mad r2.xyzw, cb0[9].yyyy, r4.xyzw, r2.xyzw
					add r4.x, -cb0[9].x, l(1.000000)
					min r2.xyzw, r2.xyzw, r4.xxxx
					mul r3.w, r3.w, cb0[8].y
					mul r3.w, r3.w, cb0[30].x
					mul r3.w, r3.w, l(-2.000000)
					mul r2.xz, r2.xxzx, r3.wwww
					mad r2.yz, r2.wwyw, r3.wwww, -r2.zzxz
					mov r2.xw, l(-1.000000,0,0,1.000000)
					dp2 r2.w, r2.zwzz, r2.zwzz
					rsq r2.w, r2.w
					mul r4.yz, r2.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
					mul r4.x, r2.w, r2.z
					dp2 r2.w, r2.xyxx, r2.xyxx
					rsq r2.w, r2.w
					mov r2.z, l(0)
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r2.xyzx, r4.xyzx
					mad r2.xyz, r4.zxyz, r2.yzxy, -r5.xyzx
					sample r4.xyzw, v1.zwzz, t3.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r4.xyxx, r4.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r4.z, r2.w
					add r2.w, -cb0[9].w, cb0[9].z
					mad r2.w, r1.w, r2.w, cb0[9].w
					mad r4.xyz, r4.xyzx, r2.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
					mad r4.xyz, r6.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
					add r2.xyz, r2.xyzx, -r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r4.xyz, r2.yyyy, cb3[1].xyzx
					mad r4.xyz, cb3[0].xyzx, r2.xxxx, r4.xyzx
					mad r4.xyz, cb3[2].xyzx, r2.zzzz, r4.xyzx
					dp3 r2.w, v7.xyzx, r4.xyzx
					add r2.w, r2.w, r2.w
					mad r4.xyz, r4.xyzx, -r2.wwww, v7.xyzx
					sample r4.xyzw, r4.xyzx, t4.xyzw, s4
					add r5.xyz, -cb0[10].xyzx, cb0[11].xyzx
					mad r5.xyz, r1.wwww, r5.xyzx, cb0[10].xyzx
					mul r4.xyz, r4.xyzx, r5.xyzx
					add r2.w, -cb0[31].x, cb0[31].y
					mad r1.w, r1.w, r2.w, cb0[31].x
					eq r2.w, cb4[0].x, l(1.000000)
					if_nz r2.w
					  eq r3.w, cb4[0].y, l(1.000000)
					  mul r5.xyz, v4.wwww, cb4[2].xyzx
					  mad r5.xyz, cb4[1].xyzx, v3.wwww, r5.xyzx
					  mad r5.xyz, cb4[3].xyzx, v5.wwww, r5.xyzx
					  add r5.xyz, r5.xyzx, cb4[4].xyzx
					  movc r5.xyz, r3.wwww, r5.xyzx, r0.yzwy
					  add r5.xyz, r5.xyzx, -cb4[6].xyzx
					  mul r5.yzw, r5.xxyz, cb4[5].xxyz
					  mad r3.w, r5.y, l(0.250000), l(0.750000)
					  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
					  max r5.x, r3.w, r4.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
					dp3 r5.x, v3.xyzx, -r2.xyzx
					dp3 r5.y, v4.xyzx, -r2.xyzx
					dp3 r5.z, v5.xyzx, -r2.xyzx
					dp3 r2.x, r5.xyzx, r5.xyzx
					rsq r2.x, r2.x
					mul r5.xyz, r2.xxxx, r5.xyzx
					mul r2.xyz, r3.wwww, cb0[2].xyzx
					if_nz r2.w
					  eq r2.w, cb4[0].y, l(1.000000)
					  mul r6.xyz, v4.wwww, cb4[2].xyzx
					  mad r6.xyz, cb4[1].xyzx, v3.wwww, r6.xyzx
					  mad r6.xyz, cb4[3].xyzx, v5.wwww, r6.xyzx
					  add r6.xyz, r6.xyzx, cb4[4].xyzx
					  movc r0.yzw, r2.wwww, r6.xxyz, r0.yyzw
					  add r0.yzw, r0.yyzw, -cb4[6].xxyz
					  mul r7.yzw, r0.yyzw, cb4[5].xxyz
					  mul r0.y, r7.y, l(0.250000)
					  mul r0.z, cb4[0].z, l(0.500000)
					  mad r0.w, -cb4[0].z, l(0.500000), l(0.250000)
					  max r0.y, r0.z, r0.y
					  min r7.x, r0.w, r0.y
					  sample r8.xyzw, r7.xzwx, t5.xyzw, s0
					  add r0.yzw, r7.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
					  sample r9.xyzw, r0.yzwy, t5.xyzw, s0
					  add r0.yzw, r7.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
					  sample r7.xyzw, r0.yzwy, t5.xyzw, s0
					  mov r5.w, l(1.000000)
					  dp4 r6.x, r8.xyzw, r5.xyzw
					  dp4 r6.y, r9.xyzw, r5.xyzw
					  dp4 r6.z, r7.xyzw, r5.xyzw
					else 
					  mov r5.w, l(1.000000)
					  dp4 r6.x, cb2[39].xyzw, r5.xyzw
					  dp4 r6.y, cb2[40].xyzw, r5.xyzw
					  dp4 r6.z, cb2[41].xyzw, r5.xyzw
					endif 
					add r0.yzw, r6.xxyz, v8.xxyz
					max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					log r0.yzw, r0.yyzw
					mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
					exp r0.yzw, r0.yyzw
					mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
					max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
					dp3 r0.x, r1.xyzx, r1.xyzx
					rsq r0.x, r0.x
					mul r1.xyz, r0.xxxx, r1.xyzx
					dp3 r0.x, r5.xyzx, cb2[0].xyzx
					max r0.x, r0.x, l(0.000000)
					dp3 r1.x, r5.xyzx, r1.xyzx
					max r1.x, r1.x, l(0.000000)
					mul r1.y, r1.w, l(128.000000)
					log r1.x, r1.x
					mul r1.x, r1.x, r1.y
					exp r1.x, r1.x
					mul r1.yzw, r2.xxyz, r3.xxyz
					mul r2.xyz, r2.xyzx, cb0[3].xyzx
					mul r2.xyz, r1.xxxx, r2.xyzx
					mad r1.xyz, r1.yzwy, r0.xxxx, r2.xyzx
					mad r0.xyz, r3.xyzx, r0.yzwy, r1.xyzx
					mad o0.xyz, r4.xyzx, r6.wwww, r0.xyzx
					mov o0.w, r6.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "FORWARD"
			LOD 300
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
			Blend SrcAlpha One, SrcAlpha One
			ColorMask RGB -1
			ZWrite Off
			Cull Off
			GpuProgramID 70567
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[39], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 5
					add r0.xy, v0.xyxx, cb0[29].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					mad o2.xy, r3.xyxx, cb0[38].xyxx, cb0[38].zwzz
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mul r0.w, r2.y, cb3[18].w
					mad r0.w, cb3[17].w, r2.x, r0.w
					mad r0.w, cb3[19].w, r2.z, r0.w
					mad r0.w, cb3[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[34].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r2.x, |v4.y|, cb0[34].x
					mul r0.w, r0.w, r2.x
					mul r2.x, r0.w, l(1.500000)
					add r2.y, -cb0[34].w, l(1.000000)
					mul r2.x, r2.y, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mul r2.yzw, cb1[4].yyyy, cb2[5].xxyz
					mad r2.yzw, cb2[4].xxyz, cb1[4].xxxx, r2.yyzw
					mad r2.yzw, cb2[6].xxyz, cb1[4].zzzz, r2.yyzw
					add r2.yzw, r2.yyzw, cb2[7].xxyz
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.yzwy
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r3.y, r0.xyzx, cb2[4].xyzx
					dp3 r3.z, r0.xyzx, cb2[5].xyzx
					dp3 r3.x, r0.xyzx, cb2[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r3.xyzx
					mad r2.yzw, cb2[3].xxyz, v0.wwww, r1.xxyz
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					add r3.xyz, -r2.yzwy, cb1[4].xyzx
					mov o6.xyz, r2.yzwy
					dp3 r2.y, r3.xyzx, r3.xyzx
					rsq r2.y, r2.y
					mul r2.yzw, r2.yyyy, r3.xxyz
					dp3 r2.y, r0.yzxy, r2.yzwy
					mad o2.w, |r2.y|, r0.w, r2.x
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r2.x, -cb0[28].y, cb0[28].z
					mad r0.w, r0.w, r2.x, cb0[28].y
					mad r0.w, r0.w, l(0.250000), cb0[10].x
					mul r0.w, r0.w, cb0[28].w
					mul o2.z, r0.w, l(0.500000)
					mov o3.z, r0.y
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r4.xyz, r0.xyzx, r2.xyzx
					mad r4.xyz, r0.zxyz, r2.yzxy, -r4.xyzx
					mul r0.y, v1.w, cb2[9].w
					mul r4.xyz, r0.yyyy, r4.xyzx
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o4.z, r0.z
					mov o5.z, r0.x
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o7.xyzw, v7.xyzw
					mul r0.xyz, r3.yyyy, cb0[18].xyzx
					mad r0.xyz, cb0[17].xyzx, r3.xxxx, r0.xyzx
					mad o8.xyz, cb0[19].xyzx, r3.zzzz, r0.xyzx
					mul r0.xyz, r1.yyyy, cb0[5].xyzx
					mad r0.xyz, cb0[4].xyzx, r1.xxxx, r0.xyzx
					mad r0.xyz, cb0[6].xyzx, r1.zzzz, r0.xyzx
					mad o9.xyz, cb0[7].xyzx, r1.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[35], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_temps 4
					add r0.xy, v0.xyxx, cb0[25].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[33].xxxy, cb0[33].zzzw
					mad o2.xy, r3.xyxx, cb0[34].xyxx, cb0[34].zwzz
					mad o1.xy, v3.xyxx, cb0[32].xyxx, cb0[32].zwzz
					mul r0.w, r2.y, cb3[18].w
					mad r0.w, cb3[17].w, r2.x, r0.w
					mad r0.w, cb3[19].w, r2.z, r0.w
					mad r0.w, cb3[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[30].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[30].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[30].w, l(1.000000)
					mul r1.w, r1.w, r2.x
					mad r0.w, r0.w, l(1.500000), -r1.w
					mul r2.xyz, cb1[4].yyyy, cb2[5].xyzx
					mad r2.xyz, cb2[4].xyzx, cb1[4].xxxx, r2.xyzx
					mad r2.xyz, cb2[6].xyzx, cb1[4].zzzz, r2.xyzx
					add r2.xyz, r2.xyzx, cb2[7].xyzx
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.xyzx
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r2.y, r0.xyzx, cb2[4].xyzx
					dp3 r2.z, r0.xyzx, cb2[5].xyzx
					dp3 r2.x, r0.xyzx, cb2[6].xyzx
					dp3 r0.x, r2.xyzx, r2.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r2.xyzx
					add r2.xyz, -r1.xyzx, cb1[4].xyzx
					mov o6.xyz, r1.xyzx
					dp3 r1.x, r2.xyzx, r2.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r2.xyzx
					dp3 r1.x, r0.yzxy, r1.xyzx
					mad o2.w, |r1.x|, r0.w, r1.w
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r1.x, -cb0[24].y, cb0[24].z
					mad r0.w, r0.w, r1.x, cb0[24].y
					mad r0.w, r0.w, l(0.250000), cb0[6].x
					mul r0.w, r0.w, cb0[24].w
					mul o2.z, r0.w, l(0.500000)
					mov o3.z, r0.y
					mul r1.xyz, v1.yyyy, cb2[1].yzxy
					mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
					mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					mul r3.xyz, r0.xyzx, r1.xyzx
					mad r3.xyz, r0.zxyz, r1.yzxy, -r3.xyzx
					mul r0.y, v1.w, cb2[9].w
					mul r3.xyz, r0.yyyy, r3.xyzx
					mov o3.y, r3.x
					mov o3.x, r1.z
					mov o4.z, r0.z
					mov o5.z, r0.x
					mov o4.x, r1.x
					mov o5.x, r1.y
					mov o4.y, r3.y
					mov o5.y, r3.z
					mov o7.xyzw, v7.xyzw
					mul r0.xyz, r2.yyyy, cb0[14].xyzx
					mad r0.xyz, cb0[13].xyzx, r2.xxxx, r0.xyzx
					mad o8.xyz, cb0[15].xyzx, r2.zzzz, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[39], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_output o9.xyzw
					dcl_temps 5
					add r0.xy, v0.xyxx, cb0[29].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					mad o2.xy, r3.xyxx, cb0[38].xyxx, cb0[38].zwzz
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mul r0.w, r2.y, cb3[18].w
					mad r0.w, cb3[17].w, r2.x, r0.w
					mad r0.w, cb3[19].w, r2.z, r0.w
					mad r0.w, cb3[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[34].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r2.x, |v4.y|, cb0[34].x
					mul r0.w, r0.w, r2.x
					mul r2.x, r0.w, l(1.500000)
					add r2.y, -cb0[34].w, l(1.000000)
					mul r2.x, r2.y, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mul r2.yzw, cb1[4].yyyy, cb2[5].xxyz
					mad r2.yzw, cb2[4].xxyz, cb1[4].xxxx, r2.yyzw
					mad r2.yzw, cb2[6].xxyz, cb1[4].zzzz, r2.yyzw
					add r2.yzw, r2.yyzw, cb2[7].xxyz
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.yzwy
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r3.y, r0.xyzx, cb2[4].xyzx
					dp3 r3.z, r0.xyzx, cb2[5].xyzx
					dp3 r3.x, r0.xyzx, cb2[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r3.xyzx
					mad r2.yzw, cb2[3].xxyz, v0.wwww, r1.xxyz
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					add r3.xyz, -r2.yzwy, cb1[4].xyzx
					mov o6.xyz, r2.yzwy
					dp3 r2.y, r3.xyzx, r3.xyzx
					rsq r2.y, r2.y
					mul r2.yzw, r2.yyyy, r3.xxyz
					dp3 r2.y, r0.yzxy, r2.yzwy
					mad o2.w, |r2.y|, r0.w, r2.x
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r2.x, -cb0[28].y, cb0[28].z
					mad r0.w, r0.w, r2.x, cb0[28].y
					mad r0.w, r0.w, l(0.250000), cb0[10].x
					mul r0.w, r0.w, cb0[28].w
					mul o2.z, r0.w, l(0.500000)
					mov o3.z, r0.y
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r4.xyz, r0.xyzx, r2.xyzx
					mad r4.xyz, r0.zxyz, r2.yzxy, -r4.xyzx
					mul r0.y, v1.w, cb2[9].w
					mul r4.xyz, r0.yyyy, r4.xyzx
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o4.z, r0.z
					mov o5.z, r0.x
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o7.xyzw, v7.xyzw
					mul r0.xyz, r3.yyyy, cb0[18].xyzx
					mad r0.xyz, cb0[17].xyzx, r3.xxxx, r0.xyzx
					mad o8.xyz, cb0[19].xyzx, r3.zzzz, r0.xyzx
					mul r0.xyzw, r1.yyyy, cb0[5].xyzw
					mad r0.xyzw, cb0[4].xyzw, r1.xxxx, r0.xyzw
					mad r0.xyzw, cb0[6].xyzw, r1.zzzz, r0.xyzw
					mad o9.xyzw, cb0[7].xyzw, r1.wwww, r0.xyzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xyz         9     NONE   float   xyz 
					//
					vs_4_0
					dcl_constantbuffer CB0[39], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_output o9.xyz
					dcl_temps 5
					add r0.xy, v0.xyxx, cb0[29].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					mad o2.xy, r3.xyxx, cb0[38].xyxx, cb0[38].zwzz
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mul r0.w, r2.y, cb3[18].w
					mad r0.w, cb3[17].w, r2.x, r0.w
					mad r0.w, cb3[19].w, r2.z, r0.w
					mad r0.w, cb3[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[34].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r2.x, |v4.y|, cb0[34].x
					mul r0.w, r0.w, r2.x
					mul r2.x, r0.w, l(1.500000)
					add r2.y, -cb0[34].w, l(1.000000)
					mul r2.x, r2.y, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mul r2.yzw, cb1[4].yyyy, cb2[5].xxyz
					mad r2.yzw, cb2[4].xxyz, cb1[4].xxxx, r2.yyzw
					mad r2.yzw, cb2[6].xxyz, cb1[4].zzzz, r2.yyzw
					add r2.yzw, r2.yyzw, cb2[7].xxyz
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.yzwy
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r3.y, r0.xyzx, cb2[4].xyzx
					dp3 r3.z, r0.xyzx, cb2[5].xyzx
					dp3 r3.x, r0.xyzx, cb2[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r3.xyzx
					mad r2.yzw, cb2[3].xxyz, v0.wwww, r1.xxyz
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					add r3.xyz, -r2.yzwy, cb1[4].xyzx
					mov o6.xyz, r2.yzwy
					dp3 r2.y, r3.xyzx, r3.xyzx
					rsq r2.y, r2.y
					mul r2.yzw, r2.yyyy, r3.xxyz
					dp3 r2.y, r0.yzxy, r2.yzwy
					mad o2.w, |r2.y|, r0.w, r2.x
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r2.x, -cb0[28].y, cb0[28].z
					mad r0.w, r0.w, r2.x, cb0[28].y
					mad r0.w, r0.w, l(0.250000), cb0[10].x
					mul r0.w, r0.w, cb0[28].w
					mul o2.z, r0.w, l(0.500000)
					mov o3.z, r0.y
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r4.xyz, r0.xyzx, r2.xyzx
					mad r4.xyz, r0.zxyz, r2.yzxy, -r4.xyzx
					mul r0.y, v1.w, cb2[9].w
					mul r4.xyz, r0.yyyy, r4.xyzx
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o4.z, r0.z
					mov o5.z, r0.x
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o7.xyzw, v7.xyzw
					mul r0.xyz, r3.yyyy, cb0[18].xyzx
					mad r0.xyz, cb0[17].xyzx, r3.xxxx, r0.xyzx
					mad o8.xyz, cb0[19].xyzx, r3.zzzz, r0.xyzx
					mul r0.xyz, r1.yyyy, cb0[5].xyzx
					mad r0.xyz, cb0[4].xyzx, r1.xxxx, r0.xyzx
					mad r0.xyz, cb0[6].xyzx, r1.zzzz, r0.xyzx
					mad o9.xyz, cb0[7].xyzx, r1.wwww, r0.xyzx
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// TANGENT                  0   xyzw        1     NONE   float   xyzw
					// NORMAL                   0   xyz         2     NONE   float   xyz 
					// TEXCOORD                 0   xyzw        3     NONE   float   xy  
					// TEXCOORD                 1   xyzw        4     NONE   float   xy  
					// TEXCOORD                 2   xyzw        5     NONE   float       
					// TEXCOORD                 3   xyzw        6     NONE   float       
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float   xyz 
					// TEXCOORD                 8   xy          9     NONE   float   xy  
					//
					vs_4_0
					dcl_constantbuffer CB0[39], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[10], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyzw
					dcl_input v2.xyz
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_input v7.xyzw
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o2.zw
					dcl_output o3.xyz
					dcl_output o4.xyz
					dcl_output o5.xyz
					dcl_output o6.xyz
					dcl_output o7.xyzw
					dcl_output o8.xyz
					dcl_output o9.xy
					dcl_temps 5
					add r0.xy, v0.xyxx, cb0[29].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad o0.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mul r0.w, v4.x, l(0.000244)
					round_ni r3.x, r0.w
					mad r3.y, -r3.x, l(4096.000000), v4.x
					mul r3.xy, r3.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o1.zw, r3.xxxy, cb0[37].xxxy, cb0[37].zzzw
					mad o2.xy, r3.xyxx, cb0[38].xyxx, cb0[38].zwzz
					mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
					mul r0.w, r2.y, cb3[18].w
					mad r0.w, cb3[17].w, r2.x, r0.w
					mad r0.w, cb3[19].w, r2.z, r0.w
					mad r0.w, cb3[20].w, r2.w, r0.w
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, r2.xyxx, cb0[34].yzyy
					div r2.xy, r0.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					rsq r0.w, r0.w
					mul r2.x, |v4.y|, cb0[34].x
					mul r0.w, r0.w, r2.x
					mul r2.x, r0.w, l(1.500000)
					add r2.y, -cb0[34].w, l(1.000000)
					mul r2.x, r2.y, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mul r2.yzw, cb1[4].yyyy, cb2[5].xxyz
					mad r2.yzw, cb2[4].xxyz, cb1[4].xxxx, r2.yyzw
					mad r2.yzw, cb2[6].xxyz, cb1[4].zzzz, r2.yyzw
					add r2.yzw, r2.yyzw, cb2[7].xxyz
					mov r0.z, v0.z
					add r0.xyz, -r0.xyzx, r2.yzwy
					dp3 r0.x, v2.xyzx, r0.xyzx
					lt r0.y, l(0.000000), r0.x
					lt r0.x, r0.x, l(0.000000)
					iadd r0.x, -r0.y, r0.x
					itof r0.x, r0.x
					mul r0.xyz, r0.xxxx, v2.xyzx
					dp3 r3.y, r0.xyzx, cb2[4].xyzx
					dp3 r3.z, r0.xyzx, cb2[5].xyzx
					dp3 r3.x, r0.xyzx, cb2[6].xyzx
					dp3 r0.x, r3.xyzx, r3.xyzx
					rsq r0.x, r0.x
					mul r0.xyz, r0.xxxx, r3.xyzx
					mad r2.yzw, cb2[3].xxyz, v0.wwww, r1.xxyz
					mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
					add r3.xyz, -r2.yzwy, cb1[4].xyzx
					mov o6.xyz, r2.yzwy
					dp3 r2.y, r3.xyzx, r3.xyzx
					rsq r2.y, r2.y
					mul r2.yzw, r2.yyyy, r3.xxyz
					dp3 r2.y, r0.yzxy, r2.yzwy
					mad o2.w, |r2.y|, r0.w, r2.x
					ge r0.w, l(0.000000), v4.y
					and r0.w, r0.w, l(0x3f800000)
					add r2.x, -cb0[28].y, cb0[28].z
					mad r0.w, r0.w, r2.x, cb0[28].y
					mad r0.w, r0.w, l(0.250000), cb0[10].x
					mul r0.w, r0.w, cb0[28].w
					mul o2.z, r0.w, l(0.500000)
					mov o3.z, r0.y
					mul r2.xyz, v1.yyyy, cb2[1].yzxy
					mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
					mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
					dp3 r0.w, r2.xyzx, r2.xyzx
					rsq r0.w, r0.w
					mul r2.xyz, r0.wwww, r2.xyzx
					mul r4.xyz, r0.xyzx, r2.xyzx
					mad r4.xyz, r0.zxyz, r2.yzxy, -r4.xyzx
					mul r0.y, v1.w, cb2[9].w
					mul r4.xyz, r0.yyyy, r4.xyzx
					mov o3.y, r4.x
					mov o3.x, r2.z
					mov o4.z, r0.z
					mov o5.z, r0.x
					mov o4.x, r2.x
					mov o5.x, r2.y
					mov o4.y, r4.y
					mov o5.y, r4.z
					mov o7.xyzw, v7.xyzw
					mul r0.xyz, r3.yyyy, cb0[18].xyzx
					mad r0.xyz, cb0[17].xyzx, r3.xxxx, r0.xyzx
					mad o8.xyz, cb0[19].xyzx, r3.zzzz, r0.xyzx
					mul r0.xy, r1.yyyy, cb0[5].xyxx
					mad r0.xy, cb0[4].xyxx, r1.xxxx, r0.xyxx
					mad r0.xy, cb0[6].xyxx, r1.zzzz, r0.xyxx
					mad o9.xy, cb0[7].xyxx, r1.wwww, r0.xyxx
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "POINT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[36], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyzw
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v6.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v6.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[33].zwzz
					mov r2.z, l(0)
					add r3.xyzw, -r2.xzzy, v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s5
					add r2.xyzw, r2.xzzy, v1.xyxy
					sample r5.xyzw, r2.xyxx, t0.xyzw, s5
					sample r3.xyzw, r3.zwzz, t0.xyzw, s5
					sample r2.xyzw, r2.zwzz, t0.xyzw, s5
					sample r6.xyzw, v1.xyxx, t0.xyzw, s5
					add r1.w, -r6.w, l(0.500000)
					add r1.w, r1.w, -v2.z
					mad r1.w, r1.w, v2.w, l(0.500000)
					mul r3.x, cb0[12].x, cb0[28].w
					mul r3.y, cb0[10].y, cb0[28].w
					mul r3.xz, r3.xxyx, v2.wwww
					mul r6.xyzw, v7.xyzw, cb0[9].xyzw
					mul r4.x, v7.w, cb0[11].w
					mad r4.yz, cb0[8].xxyx, cb1[0].yyyy, v1.zzwz
					sample r7.xyzw, r4.yzyy, t1.xyzw, s2
					mul r6.xyzw, r6.xyzw, r7.xyzw
					mad r4.yz, cb0[10].zzwz, cb1[0].yyyy, v2.xxyx
					sample r7.xyzw, r4.yzyy, t2.xyzw, s3
					mul r5.xyz, r7.xyzx, cb0[11].xyzx
					mul r7.w, r4.x, r7.w
					mad r4.x, -r3.x, l(0.500000), r1.w
					mad r3.z, r3.z, l(0.500000), r4.x
					mad r3.y, r3.y, v2.w, l(1.000000)
					div_sat r3.y, r3.z, r3.y
					add r3.y, -r3.y, l(1.000000)
					mad_sat r1.w, r3.x, l(0.500000), r1.w
					min r3.x, r3.x, l(1.000000)
					sqrt r3.x, r3.x
					mul r3.x, r1.w, r3.x
					mul r6.xyz, r6.wwww, r6.xyzx
					mul r7.xyz, r5.xyzx, r7.wwww
					add r7.xyzw, -r6.xyzw, r7.xyzw
					mad r6.xyzw, r3.xxxx, r7.xyzw, r6.xyzw
					mul r6.xyzw, r3.yyyy, r6.xyzw
					max r3.x, r6.w, l(0.000100)
					div r3.xyz, r6.xyzx, r3.xxxx
					mul r4.x, cb0[28].x, l(0.500000)
					ge r4.y, r4.x, -r4.x
					frc r4.x, |r4.x|
					movc r4.x, r4.y, r4.x, -r4.x
					ge r4.x, r4.x, l(0.500000)
					add r4.y, v2.z, cb0[12].z
					mov r2.x, r4.w
					mov r2.y, r5.w
					mov r2.z, r3.w
					add r2.xyzw, r4.yyyy, r2.xyzw
					add r3.w, cb0[12].w, cb0[12].x
					max r3.w, r3.w, l(0.010000)
					add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					div r2.xyzw, r2.xyzw, r3.wwww
					add_sat r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					mad r5.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					add r5.xyzw, -|r5.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					movc r2.xyzw, r4.xxxx, r5.xyzw, r2.xyzw
					mul r4.xyzw, r2.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
					sincos r4.xyzw, null, r4.xyzw
					add r4.xyzw, -r2.xyzw, r4.xyzw
					mad r2.xyzw, cb0[13].yyyy, r4.xyzw, r2.xyzw
					add r4.x, -cb0[13].x, l(1.000000)
					min r2.xyzw, r2.xyzw, r4.xxxx
					mul r3.w, r3.w, cb0[12].y
					mul r3.w, r3.w, cb0[34].x
					mul r3.w, r3.w, l(-2.000000)
					mul r2.xz, r2.xxzx, r3.wwww
					mad r2.yz, r2.wwyw, r3.wwww, -r2.zzxz
					mov r2.xw, l(-1.000000,0,0,1.000000)
					dp2 r2.w, r2.zwzz, r2.zwzz
					rsq r2.w, r2.w
					mul r4.yz, r2.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
					mul r4.x, r2.w, r2.z
					dp2 r2.w, r2.xyxx, r2.xyxx
					rsq r2.w, r2.w
					mov r2.z, l(0)
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r2.xyzx, r4.xyzx
					mad r2.xyz, r4.zxyz, r2.yzxy, -r5.xyzx
					sample r4.xyzw, v1.zwzz, t3.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r4.xyxx, r4.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r4.z, r2.w
					add r2.w, -cb0[13].w, cb0[13].z
					mad r2.w, r1.w, r2.w, cb0[13].w
					mad r4.xyz, r4.xyzx, r2.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
					mad r4.xyz, r6.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
					add r2.xyz, r2.xyzx, -r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					add r2.w, -cb0[35].x, cb0[35].y
					mad r1.w, r1.w, r2.w, cb0[35].x
					mul r4.xyz, v6.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r4.xyzw, r3.wwww, t4.xyzw, s1
					mul r2.w, r2.w, r4.x
					dp3 r4.x, v3.xyzx, -r2.xyzx
					dp3 r4.y, v4.xyzx, -r2.xyzx
					dp3 r4.z, v5.xyzx, -r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, r0.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp3 r0.y, r2.xyzx, r1.xyzx
					max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.z, r1.w, l(128.000000)
					log r0.y, r0.y
					mul r0.y, r0.y, r0.z
					exp r0.y, r0.y
					mul r1.xyz, r3.xyzx, r4.xyzx
					mul r2.xyz, r4.xyzx, cb0[3].xyzx
					mul r0.yzw, r0.yyyy, r2.xxyz
					mad o0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mov o0.w, r6.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[32], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture3d (float,float,float,float) t4
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v6.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[29].zwzz
					mov r1.z, l(0)
					add r2.xyzw, -r1.xzzy, v1.xyxy
					sample r3.xyzw, r2.xyxx, t0.xyzw, s4
					add r1.xyzw, r1.xzzy, v1.xyxy
					sample r4.xyzw, r1.xyxx, t0.xyzw, s4
					sample r2.xyzw, r2.zwzz, t0.xyzw, s4
					sample r1.xyzw, r1.zwzz, t0.xyzw, s4
					sample r5.xyzw, v1.xyxx, t0.xyzw, s4
					add r2.x, -r5.w, l(0.500000)
					add r2.x, r2.x, -v2.z
					mad r2.x, r2.x, v2.w, l(0.500000)
					mul r2.y, cb0[8].x, cb0[24].w
					mul r2.y, r2.y, v2.w
					mul r2.z, cb0[6].y, cb0[24].w
					mul r3.x, r2.z, v2.w
					mul r5.xyzw, v7.xyzw, cb0[5].xyzw
					mul r3.y, v7.w, cb0[7].w
					mad r4.xy, cb0[4].xyxx, cb1[0].yyyy, v1.zwzz
					sample r6.xyzw, r4.xyxx, t1.xyzw, s1
					mul r5.xyzw, r5.xyzw, r6.xyzw
					mad r4.xy, cb0[6].zwzz, cb1[0].yyyy, v2.xyxx
					sample r6.xyzw, r4.xyxx, t2.xyzw, s2
					mul r4.xyz, r6.xyzx, cb0[7].xyzx
					mul r6.w, r3.y, r6.w
					mad r3.y, -r2.y, l(0.500000), r2.x
					mad r3.x, r3.x, l(0.500000), r3.y
					mad r2.z, r2.z, v2.w, l(1.000000)
					div_sat r2.z, r3.x, r2.z
					add r2.z, -r2.z, l(1.000000)
					mad_sat r2.x, r2.y, l(0.500000), r2.x
					min r2.y, r2.y, l(1.000000)
					sqrt r2.y, r2.y
					mul r2.y, r2.y, r2.x
					mul r5.xyz, r5.wwww, r5.xyzx
					mul r6.xyz, r4.xyzx, r6.wwww
					add r6.xyzw, -r5.xyzw, r6.xyzw
					mad r5.xyzw, r2.yyyy, r6.xyzw, r5.xyzw
					mul r5.xyzw, r2.zzzz, r5.xyzw
					max r2.y, r5.w, l(0.000100)
					div r3.xyz, r5.xyzx, r2.yyyy
					mul r2.y, cb0[24].x, l(0.500000)
					ge r2.z, r2.y, -r2.y
					frc r2.y, |r2.y|
					movc r2.y, r2.z, r2.y, -r2.y
					ge r2.y, r2.y, l(0.500000)
					add r2.z, v2.z, cb0[8].z
					mov r1.x, r3.w
					mov r1.y, r4.w
					mov r1.z, r2.w
					add r1.xyzw, r2.zzzz, r1.xyzw
					add r2.z, cb0[8].w, cb0[8].x
					max r2.z, r2.z, l(0.010000)
					add r1.xyzw, r1.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					div r1.xyzw, r1.xyzw, r2.zzzz
					add_sat r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					mad r4.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					add r4.xyzw, -|r4.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					movc r1.xyzw, r2.yyyy, r4.xyzw, r1.xyzw
					mul r4.xyzw, r1.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
					sincos r4.xyzw, null, r4.xyzw
					add r4.xyzw, -r1.xyzw, r4.xyzw
					mad r1.xyzw, cb0[9].yyyy, r4.xyzw, r1.xyzw
					add r2.y, -cb0[9].x, l(1.000000)
					min r1.xyzw, r1.xyzw, r2.yyyy
					mul r2.y, r2.z, cb0[8].y
					mul r2.y, r2.y, cb0[30].x
					mul r2.y, r2.y, l(-2.000000)
					mul r1.xz, r1.xxzx, r2.yyyy
					mad r1.yz, r1.wwyw, r2.yyyy, -r1.zzxz
					mov r1.xw, l(-1.000000,0,0,1.000000)
					dp2 r1.w, r1.zwzz, r1.zwzz
					rsq r1.w, r1.w
					mul r4.yz, r1.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
					mul r4.x, r1.w, r1.z
					dp2 r1.w, r1.xyxx, r1.xyxx
					rsq r1.w, r1.w
					mov r1.z, l(0)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.yzw, r1.xxyz, r4.xxyz
					mad r1.xyz, r4.zxyz, r1.yzxy, -r2.yzwy
					sample r4.xyzw, v1.zwzz, t3.xyzw, s3
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					add r1.w, -cb0[9].w, cb0[9].z
					mad r1.w, r2.x, r1.w, cb0[9].w
					mad r2.yzw, r4.xxyz, r1.wwww, l(0.000000, -0.000000, -0.000000, -1.000000)
					mad r2.yzw, r5.wwww, r2.yyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
					add r1.xyz, r1.xyzx, -r2.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[31].x, cb0[31].y
					mad r1.w, r2.x, r1.w, cb0[31].x
					eq r2.x, cb3[0].x, l(1.000000)
					if_nz r2.x
					  eq r2.x, cb3[0].y, l(1.000000)
					  mul r2.yzw, v6.yyyy, cb3[2].xxyz
					  mad r2.yzw, cb3[1].xxyz, v6.xxxx, r2.yyzw
					  mad r2.yzw, cb3[3].xxyz, v6.zzzz, r2.yyzw
					  add r2.yzw, r2.yyzw, cb3[4].xxyz
					  movc r2.xyz, r2.xxxx, r2.yzwy, v6.xyzx
					  add r2.xyz, r2.xyzx, -cb3[6].xyzx
					  mul r2.yzw, r2.xxyz, cb3[5].xxyz
					  mad r2.y, r2.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r2.x, r2.y, r3.w
					  sample r2.xyzw, r2.xzwx, t4.xyzw, s0
					else 
					  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
					dp3 r4.x, v3.xyzx, -r1.xyzx
					dp3 r4.y, v4.xyzx, -r1.xyzx
					dp3 r4.z, v5.xyzx, -r1.xyzx
					dp3 r1.x, r4.xyzx, r4.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r4.xyzx
					mul r2.xyz, r2.xxxx, cb0[2].xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r1.xyzx, cb2[0].xyzx
					dp3 r0.x, r1.xyzx, r0.xyzx
					max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.y, r1.w, l(128.000000)
					log r0.x, r0.x
					mul r0.x, r0.x, r0.y
					exp r0.x, r0.x
					mul r1.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r2.xyzx, cb0[3].xyzx
					mul r0.xyz, r0.xxxx, r2.xyzx
					mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mov o0.w, r5.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SPOT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyzw        9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[36], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture2d (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyzw
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v6.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v6.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[33].zwzz
					mov r2.z, l(0)
					add r3.xyzw, -r2.xzzy, v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s6
					add r2.xyzw, r2.xzzy, v1.xyxy
					sample r5.xyzw, r2.xyxx, t0.xyzw, s6
					sample r3.xyzw, r3.zwzz, t0.xyzw, s6
					sample r2.xyzw, r2.zwzz, t0.xyzw, s6
					sample r6.xyzw, v1.xyxx, t0.xyzw, s6
					add r1.w, -r6.w, l(0.500000)
					add r1.w, r1.w, -v2.z
					mad r1.w, r1.w, v2.w, l(0.500000)
					mul r3.x, cb0[12].x, cb0[28].w
					mul r3.y, cb0[10].y, cb0[28].w
					mul r3.xz, r3.xxyx, v2.wwww
					mul r6.xyzw, v7.xyzw, cb0[9].xyzw
					mul r4.x, v7.w, cb0[11].w
					mad r4.yz, cb0[8].xxyx, cb1[0].yyyy, v1.zzwz
					sample r7.xyzw, r4.yzyy, t1.xyzw, s3
					mul r6.xyzw, r6.xyzw, r7.xyzw
					mad r4.yz, cb0[10].zzwz, cb1[0].yyyy, v2.xxyx
					sample r7.xyzw, r4.yzyy, t2.xyzw, s4
					mul r5.xyz, r7.xyzx, cb0[11].xyzx
					mul r7.w, r4.x, r7.w
					mad r4.x, -r3.x, l(0.500000), r1.w
					mad r3.z, r3.z, l(0.500000), r4.x
					mad r3.y, r3.y, v2.w, l(1.000000)
					div_sat r3.y, r3.z, r3.y
					add r3.y, -r3.y, l(1.000000)
					mad_sat r1.w, r3.x, l(0.500000), r1.w
					min r3.x, r3.x, l(1.000000)
					sqrt r3.x, r3.x
					mul r3.x, r1.w, r3.x
					mul r6.xyz, r6.wwww, r6.xyzx
					mul r7.xyz, r5.xyzx, r7.wwww
					add r7.xyzw, -r6.xyzw, r7.xyzw
					mad r6.xyzw, r3.xxxx, r7.xyzw, r6.xyzw
					mul r6.xyzw, r3.yyyy, r6.xyzw
					max r3.x, r6.w, l(0.000100)
					div r3.xyz, r6.xyzx, r3.xxxx
					mul r4.x, cb0[28].x, l(0.500000)
					ge r4.y, r4.x, -r4.x
					frc r4.x, |r4.x|
					movc r4.x, r4.y, r4.x, -r4.x
					ge r4.x, r4.x, l(0.500000)
					add r4.y, v2.z, cb0[12].z
					mov r2.x, r4.w
					mov r2.y, r5.w
					mov r2.z, r3.w
					add r2.xyzw, r4.yyyy, r2.xyzw
					add r3.w, cb0[12].w, cb0[12].x
					max r3.w, r3.w, l(0.010000)
					add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					div r2.xyzw, r2.xyzw, r3.wwww
					add_sat r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					mad r5.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					add r5.xyzw, -|r5.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					movc r2.xyzw, r4.xxxx, r5.xyzw, r2.xyzw
					mul r4.xyzw, r2.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
					sincos r4.xyzw, null, r4.xyzw
					add r4.xyzw, -r2.xyzw, r4.xyzw
					mad r2.xyzw, cb0[13].yyyy, r4.xyzw, r2.xyzw
					add r4.x, -cb0[13].x, l(1.000000)
					min r2.xyzw, r2.xyzw, r4.xxxx
					mul r3.w, r3.w, cb0[12].y
					mul r3.w, r3.w, cb0[34].x
					mul r3.w, r3.w, l(-2.000000)
					mul r2.xz, r2.xxzx, r3.wwww
					mad r2.yz, r2.wwyw, r3.wwww, -r2.zzxz
					mov r2.xw, l(-1.000000,0,0,1.000000)
					dp2 r2.w, r2.zwzz, r2.zwzz
					rsq r2.w, r2.w
					mul r4.yz, r2.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
					mul r4.x, r2.w, r2.z
					dp2 r2.w, r2.xyxx, r2.xyxx
					rsq r2.w, r2.w
					mov r2.z, l(0)
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r2.xyzx, r4.xyzx
					mad r2.xyz, r4.zxyz, r2.yzxy, -r5.xyzx
					sample r4.xyzw, v1.zwzz, t3.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r4.xyxx, r4.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r4.z, r2.w
					add r2.w, -cb0[13].w, cb0[13].z
					mad r2.w, r1.w, r2.w, cb0[13].w
					mad r4.xyz, r4.xyzx, r2.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
					mad r4.xyz, r6.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
					add r2.xyz, r2.xyzx, -r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					add r2.w, -cb0[35].x, cb0[35].y
					mad r1.w, r1.w, r2.w, cb0[35].x
					mul r4.xyzw, v6.yyyy, cb0[5].xyzw
					mad r4.xyzw, cb0[4].xyzw, v6.xxxx, r4.xyzw
					mad r4.xyzw, cb0[6].xyzw, v6.zzzz, r4.xyzw
					add r4.xyzw, r4.xyzw, cb0[7].xyzw
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					lt r3.w, l(0.000000), r4.z
					and r3.w, r3.w, l(0x3f800000)
					div r5.xy, r4.xyxx, r4.wwww
					add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
					sample r5.xyzw, r5.xyxx, t4.xyzw, s1
					mul r3.w, r3.w, r5.w
					dp3 r4.x, r4.xyzx, r4.xyzx
					sample r4.xyzw, r4.xxxx, t5.xyzw, s2
					mul r3.w, r3.w, r4.x
					mul r2.w, r2.w, r3.w
					dp3 r4.x, v3.xyzx, -r2.xyzx
					dp3 r4.y, v4.xyzx, -r2.xyzx
					dp3 r4.z, v5.xyzx, -r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, r0.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp3 r0.y, r2.xyzx, r1.xyzx
					max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.z, r1.w, l(128.000000)
					log r0.y, r0.y
					mul r0.y, r0.y, r0.z
					exp r0.y, r0.y
					mul r1.xyz, r3.xyzx, r4.xyzx
					mul r2.xyz, r4.xyzx, cb0[3].xyzx
					mul r0.yzw, r0.yyyy, r2.xxyz
					mad o0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mov o0.w, r6.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "POINT_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xyz         9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[36], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_sampler s6, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texturecube (float,float,float,float) t5
					dcl_resource_texture3d (float,float,float,float) t6
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyzw
					dcl_output o0.xyzw
					dcl_temps 8
					add r0.xyz, -v6.xyzx, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					add r1.xyz, -v6.xyzx, cb1[4].xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[33].zwzz
					mov r2.z, l(0)
					add r3.xyzw, -r2.xzzy, v1.xyxy
					sample r4.xyzw, r3.xyxx, t0.xyzw, s6
					add r2.xyzw, r2.xzzy, v1.xyxy
					sample r5.xyzw, r2.xyxx, t0.xyzw, s6
					sample r3.xyzw, r3.zwzz, t0.xyzw, s6
					sample r2.xyzw, r2.zwzz, t0.xyzw, s6
					sample r6.xyzw, v1.xyxx, t0.xyzw, s6
					add r1.w, -r6.w, l(0.500000)
					add r1.w, r1.w, -v2.z
					mad r1.w, r1.w, v2.w, l(0.500000)
					mul r3.x, cb0[12].x, cb0[28].w
					mul r3.y, cb0[10].y, cb0[28].w
					mul r3.xz, r3.xxyx, v2.wwww
					mul r6.xyzw, v7.xyzw, cb0[9].xyzw
					mul r4.x, v7.w, cb0[11].w
					mad r4.yz, cb0[8].xxyx, cb1[0].yyyy, v1.zzwz
					sample r7.xyzw, r4.yzyy, t1.xyzw, s3
					mul r6.xyzw, r6.xyzw, r7.xyzw
					mad r4.yz, cb0[10].zzwz, cb1[0].yyyy, v2.xxyx
					sample r7.xyzw, r4.yzyy, t2.xyzw, s4
					mul r5.xyz, r7.xyzx, cb0[11].xyzx
					mul r7.w, r4.x, r7.w
					mad r4.x, -r3.x, l(0.500000), r1.w
					mad r3.z, r3.z, l(0.500000), r4.x
					mad r3.y, r3.y, v2.w, l(1.000000)
					div_sat r3.y, r3.z, r3.y
					add r3.y, -r3.y, l(1.000000)
					mad_sat r1.w, r3.x, l(0.500000), r1.w
					min r3.x, r3.x, l(1.000000)
					sqrt r3.x, r3.x
					mul r3.x, r1.w, r3.x
					mul r6.xyz, r6.wwww, r6.xyzx
					mul r7.xyz, r5.xyzx, r7.wwww
					add r7.xyzw, -r6.xyzw, r7.xyzw
					mad r6.xyzw, r3.xxxx, r7.xyzw, r6.xyzw
					mul r6.xyzw, r3.yyyy, r6.xyzw
					max r3.x, r6.w, l(0.000100)
					div r3.xyz, r6.xyzx, r3.xxxx
					mul r4.x, cb0[28].x, l(0.500000)
					ge r4.y, r4.x, -r4.x
					frc r4.x, |r4.x|
					movc r4.x, r4.y, r4.x, -r4.x
					ge r4.x, r4.x, l(0.500000)
					add r4.y, v2.z, cb0[12].z
					mov r2.x, r4.w
					mov r2.y, r5.w
					mov r2.z, r3.w
					add r2.xyzw, r4.yyyy, r2.xyzw
					add r3.w, cb0[12].w, cb0[12].x
					max r3.w, r3.w, l(0.010000)
					add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					div r2.xyzw, r2.xyzw, r3.wwww
					add_sat r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					mad r5.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					add r5.xyzw, -|r5.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					movc r2.xyzw, r4.xxxx, r5.xyzw, r2.xyzw
					mul r4.xyzw, r2.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
					sincos r4.xyzw, null, r4.xyzw
					add r4.xyzw, -r2.xyzw, r4.xyzw
					mad r2.xyzw, cb0[13].yyyy, r4.xyzw, r2.xyzw
					add r4.x, -cb0[13].x, l(1.000000)
					min r2.xyzw, r2.xyzw, r4.xxxx
					mul r3.w, r3.w, cb0[12].y
					mul r3.w, r3.w, cb0[34].x
					mul r3.w, r3.w, l(-2.000000)
					mul r2.xz, r2.xxzx, r3.wwww
					mad r2.yz, r2.wwyw, r3.wwww, -r2.zzxz
					mov r2.xw, l(-1.000000,0,0,1.000000)
					dp2 r2.w, r2.zwzz, r2.zwzz
					rsq r2.w, r2.w
					mul r4.yz, r2.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
					mul r4.x, r2.w, r2.z
					dp2 r2.w, r2.xyxx, r2.xyxx
					rsq r2.w, r2.w
					mov r2.z, l(0)
					mul r2.xyz, r2.wwww, r2.xyzx
					mul r5.xyz, r2.xyzx, r4.xyzx
					mad r2.xyz, r4.zxyz, r2.yzxy, -r5.xyzx
					sample r4.xyzw, v1.zwzz, t3.xyzw, s5
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r2.w, r4.xyxx, r4.xyxx
					min r2.w, r2.w, l(1.000000)
					add r2.w, -r2.w, l(1.000000)
					sqrt r4.z, r2.w
					add r2.w, -cb0[13].w, cb0[13].z
					mad r2.w, r1.w, r2.w, cb0[13].w
					mad r4.xyz, r4.xyzx, r2.wwww, l(-0.000000, -0.000000, -1.000000, 0.000000)
					mad r4.xyz, r6.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
					add r2.xyz, r2.xyzx, -r4.xyzx
					dp3 r2.w, r2.xyzx, r2.xyzx
					rsq r2.w, r2.w
					mul r2.xyz, r2.wwww, r2.xyzx
					add r2.w, -cb0[35].x, cb0[35].y
					mad r1.w, r1.w, r2.w, cb0[35].x
					mul r4.xyz, v6.yyyy, cb0[5].xyzx
					mad r4.xyz, cb0[4].xyzx, v6.xxxx, r4.xyzx
					mad r4.xyz, cb0[6].xyzx, v6.zzzz, r4.xyzx
					add r4.xyz, r4.xyzx, cb0[7].xyzx
					eq r2.w, cb3[0].x, l(1.000000)
					if_nz r2.w
					  eq r2.w, cb3[0].y, l(1.000000)
					  mul r5.xyz, v6.yyyy, cb3[2].xyzx
					  mad r5.xyz, cb3[1].xyzx, v6.xxxx, r5.xyzx
					  mad r5.xyz, cb3[3].xyzx, v6.zzzz, r5.xyzx
					  add r5.xyz, r5.xyzx, cb3[4].xyzx
					  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
					  add r5.xyz, r5.xyzx, -cb3[6].xyzx
					  mul r5.yzw, r5.xxyz, cb3[5].xxyz
					  mad r2.w, r5.y, l(0.250000), l(0.750000)
					  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r5.x, r2.w, r3.w
					  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
					else 
					  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
					dp3 r3.w, r4.xyzx, r4.xyzx
					sample r5.xyzw, r3.wwww, t4.xyzw, s2
					sample r4.xyzw, r4.xyzx, t5.xyzw, s1
					mul r3.w, r4.w, r5.x
					mul r2.w, r2.w, r3.w
					dp3 r4.x, v3.xyzx, -r2.xyzx
					dp3 r4.y, v4.xyzx, -r2.xyzx
					dp3 r4.z, v5.xyzx, -r2.xyzx
					dp3 r2.x, r4.xyzx, r4.xyzx
					rsq r2.x, r2.x
					mul r2.xyz, r2.xxxx, r4.xyzx
					mul r4.xyz, r2.wwww, cb0[2].xyzx
					mad r1.xyz, r1.xyzx, r0.wwww, r0.xyzx
					dp3 r0.w, r1.xyzx, r1.xyzx
					rsq r0.w, r0.w
					mul r1.xyz, r0.wwww, r1.xyzx
					dp3 r0.x, r2.xyzx, r0.xyzx
					dp3 r0.y, r2.xyzx, r1.xyzx
					max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.z, r1.w, l(128.000000)
					log r0.y, r0.y
					mul r0.y, r0.y, r0.z
					exp r0.y, r0.y
					mul r1.xyz, r3.xyzx, r4.xyzx
					mul r2.xyz, r4.xyzx, cb0[3].xyzx
					mul r0.yzw, r0.yyyy, r2.xxyz
					mad o0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
					mov o0.w, r6.w
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "DIRECTIONAL_COOKIE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 1   xy          2     NONE   float   xy  
					// TEXCOORD                 6     zw        2     NONE   float     zw
					// TEXCOORD                 2   xyz         3     NONE   float   xyz 
					// TEXCOORD                 3   xyz         4     NONE   float   xyz 
					// TEXCOORD                 4   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyz         6     NONE   float   xyz 
					// COLOR                    0   xyzw        7     NONE   float   xyzw
					// TEXCOORD                 7   xyz         8     NONE   float       
					// TEXCOORD                 8   xy          9     NONE   float       
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[36], immediateIndexed
					dcl_constantbuffer CB1[5], immediateIndexed
					dcl_constantbuffer CB2[47], immediateIndexed
					dcl_constantbuffer CB3[7], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_sampler s3, mode_default
					dcl_sampler s4, mode_default
					dcl_sampler s5, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_resource_texture2d (float,float,float,float) t3
					dcl_resource_texture2d (float,float,float,float) t4
					dcl_resource_texture3d (float,float,float,float) t5
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v2.zw
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyz
					dcl_input_ps linear v5.xyz
					dcl_input_ps linear v6.xyz
					dcl_input_ps linear v7.xyzw
					dcl_output o0.xyzw
					dcl_temps 7
					add r0.xyz, -v6.xyzx, cb1[4].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[33].zwzz
					mov r1.z, l(0)
					add r2.xyzw, -r1.xzzy, v1.xyxy
					sample r3.xyzw, r2.xyxx, t0.xyzw, s5
					add r1.xyzw, r1.xzzy, v1.xyxy
					sample r4.xyzw, r1.xyxx, t0.xyzw, s5
					sample r2.xyzw, r2.zwzz, t0.xyzw, s5
					sample r1.xyzw, r1.zwzz, t0.xyzw, s5
					sample r5.xyzw, v1.xyxx, t0.xyzw, s5
					add r2.x, -r5.w, l(0.500000)
					add r2.x, r2.x, -v2.z
					mad r2.x, r2.x, v2.w, l(0.500000)
					mul r2.y, cb0[12].x, cb0[28].w
					mul r2.y, r2.y, v2.w
					mul r2.z, cb0[10].y, cb0[28].w
					mul r3.x, r2.z, v2.w
					mul r5.xyzw, v7.xyzw, cb0[9].xyzw
					mul r3.y, v7.w, cb0[11].w
					mad r4.xy, cb0[8].xyxx, cb1[0].yyyy, v1.zwzz
					sample r6.xyzw, r4.xyxx, t1.xyzw, s2
					mul r5.xyzw, r5.xyzw, r6.xyzw
					mad r4.xy, cb0[10].zwzz, cb1[0].yyyy, v2.xyxx
					sample r6.xyzw, r4.xyxx, t2.xyzw, s3
					mul r4.xyz, r6.xyzx, cb0[11].xyzx
					mul r6.w, r3.y, r6.w
					mad r3.y, -r2.y, l(0.500000), r2.x
					mad r3.x, r3.x, l(0.500000), r3.y
					mad r2.z, r2.z, v2.w, l(1.000000)
					div_sat r2.z, r3.x, r2.z
					add r2.z, -r2.z, l(1.000000)
					mad_sat r2.x, r2.y, l(0.500000), r2.x
					min r2.y, r2.y, l(1.000000)
					sqrt r2.y, r2.y
					mul r2.y, r2.y, r2.x
					mul r5.xyz, r5.wwww, r5.xyzx
					mul r6.xyz, r4.xyzx, r6.wwww
					add r6.xyzw, -r5.xyzw, r6.xyzw
					mad r5.xyzw, r2.yyyy, r6.xyzw, r5.xyzw
					mul r5.xyzw, r2.zzzz, r5.xyzw
					max r2.y, r5.w, l(0.000100)
					div r3.xyz, r5.xyzx, r2.yyyy
					mul r2.y, cb0[28].x, l(0.500000)
					ge r2.z, r2.y, -r2.y
					frc r2.y, |r2.y|
					movc r2.y, r2.z, r2.y, -r2.y
					ge r2.y, r2.y, l(0.500000)
					add r2.z, v2.z, cb0[12].z
					mov r1.x, r3.w
					mov r1.y, r4.w
					mov r1.z, r2.w
					add r1.xyzw, r2.zzzz, r1.xyzw
					add r2.z, cb0[12].w, cb0[12].x
					max r2.z, r2.z, l(0.010000)
					add r1.xyzw, r1.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
					div r1.xyzw, r1.xyzw, r2.zzzz
					add_sat r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
					mad r4.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
					add r4.xyzw, -|r4.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
					movc r1.xyzw, r2.yyyy, r4.xyzw, r1.xyzw
					mul r4.xyzw, r1.xyzw, l(1.570796, 1.570796, 1.570796, 1.570796)
					sincos r4.xyzw, null, r4.xyzw
					add r4.xyzw, -r1.xyzw, r4.xyzw
					mad r1.xyzw, cb0[13].yyyy, r4.xyzw, r1.xyzw
					add r2.y, -cb0[13].x, l(1.000000)
					min r1.xyzw, r1.xyzw, r2.yyyy
					mul r2.y, r2.z, cb0[12].y
					mul r2.y, r2.y, cb0[34].x
					mul r2.y, r2.y, l(-2.000000)
					mul r1.xz, r1.xxzx, r2.yyyy
					mad r1.yz, r1.wwyw, r2.yyyy, -r1.zzxz
					mov r1.xw, l(-1.000000,0,0,1.000000)
					dp2 r1.w, r1.zwzz, r1.zwzz
					rsq r1.w, r1.w
					mul r4.yz, r1.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
					mul r4.x, r1.w, r1.z
					dp2 r1.w, r1.xyxx, r1.xyxx
					rsq r1.w, r1.w
					mov r1.z, l(0)
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.yzw, r1.xxyz, r4.xxyz
					mad r1.xyz, r4.zxyz, r1.yzxy, -r2.yzwy
					sample r4.xyzw, v1.zwzz, t3.xyzw, s4
					mul r4.x, r4.w, r4.x
					mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
					dp2 r1.w, r4.xyxx, r4.xyxx
					min r1.w, r1.w, l(1.000000)
					add r1.w, -r1.w, l(1.000000)
					sqrt r4.z, r1.w
					add r1.w, -cb0[13].w, cb0[13].z
					mad r1.w, r2.x, r1.w, cb0[13].w
					mad r2.yzw, r4.xxyz, r1.wwww, l(0.000000, -0.000000, -0.000000, -1.000000)
					mad r2.yzw, r5.wwww, r2.yyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
					add r1.xyz, r1.xyzx, -r2.yzwy
					dp3 r1.w, r1.xyzx, r1.xyzx
					rsq r1.w, r1.w
					mul r1.xyz, r1.wwww, r1.xyzx
					add r1.w, -cb0[35].x, cb0[35].y
					mad r1.w, r2.x, r1.w, cb0[35].x
					mul r2.xy, v6.yyyy, cb0[5].xyxx
					mad r2.xy, cb0[4].xyxx, v6.xxxx, r2.xyxx
					mad r2.xy, cb0[6].xyxx, v6.zzzz, r2.xyxx
					add r2.xy, r2.xyxx, cb0[7].xyxx
					eq r2.z, cb3[0].x, l(1.000000)
					if_nz r2.z
					  eq r2.z, cb3[0].y, l(1.000000)
					  mul r4.xyz, v6.yyyy, cb3[2].xyzx
					  mad r4.xyz, cb3[1].xyzx, v6.xxxx, r4.xyzx
					  mad r4.xyz, cb3[3].xyzx, v6.zzzz, r4.xyzx
					  add r4.xyz, r4.xyzx, cb3[4].xyzx
					  movc r4.xyz, r2.zzzz, r4.xyzx, v6.xyzx
					  add r4.xyz, r4.xyzx, -cb3[6].xyzx
					  mul r4.yzw, r4.xxyz, cb3[5].xxyz
					  mad r2.z, r4.y, l(0.250000), l(0.750000)
					  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
					  max r4.x, r2.w, r2.z
					  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
					else 
					  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
					endif 
					dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
					sample r4.xyzw, r2.xyxx, t4.xyzw, s1
					mul r2.x, r2.z, r4.w
					dp3 r4.x, v3.xyzx, -r1.xyzx
					dp3 r4.y, v4.xyzx, -r1.xyzx
					dp3 r4.z, v5.xyzx, -r1.xyzx
					dp3 r1.x, r4.xyzx, r4.xyzx
					rsq r1.x, r1.x
					mul r1.xyz, r1.xxxx, r4.xyzx
					mul r2.xyz, r2.xxxx, cb0[2].xyzx
					mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
					dp3 r0.w, r0.xyzx, r0.xyzx
					rsq r0.w, r0.w
					mul r0.xyz, r0.wwww, r0.xyzx
					dp3 r0.w, r1.xyzx, cb2[0].xyzx
					dp3 r0.x, r1.xyzx, r0.xyzx
					max r0.xw, r0.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
					mul r0.y, r1.w, l(128.000000)
					log r0.x, r0.x
					mul r0.x, r0.x, r0.y
					exp r0.x, r0.x
					mul r1.xyz, r2.xyzx, r3.xyzx
					mul r2.xyz, r2.xyzx, cb0[3].xyzx
					mul r0.xyz, r0.xxxx, r2.xyzx
					mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
					mov o0.w, r5.w
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
		Pass {
			Name "Caster"
			LOD 300
			Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "SHADOWCASTER" "QUEUE" = "Transparent" "RenderType" = "Transparent" "SHADOWSUPPORT" = "true" }
			ColorMask RGB -1
			Cull Off
			Offset 1, 1
			Fog {
				Mode Off
			}
			GpuProgramID 132202
			Program "vp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float     zw
					// TEXCOORD                 2   x           2     NONE   float   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.x
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					div r1.x, cb1[5].x, r0.w
					min r1.x, r1.x, l(0.000000)
					max r1.x, r1.x, l(-1.000000)
					add r0.z, r0.z, r1.x
					min r1.x, r0.w, r0.z
					mov o0.xyw, r0.xyxw
					add r0.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r0.x, r0.z
					mad o1.xy, v2.xyxx, cb0[2].xyxx, cb0[2].zwzz
					mad o1.zw, v2.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mad r0.x, -cb0[4].x, cb0[4].z, l(1.000000)
					mad r0.x, -cb0[4].y, cb0[4].z, r0.x
					mul o2.x, r0.x, l(0.500000)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyz 
					// NORMAL                   0   xyz         1     NONE   float       
					// TEXCOORD                 0   xyzw        2     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float     zw
					// TEXCOORD                 2   x           2     NONE   float   x   
					//
					vs_4_0
					dcl_constantbuffer CB0[5], immediateIndexed
					dcl_constantbuffer CB1[6], immediateIndexed
					dcl_constantbuffer CB2[4], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyz
					dcl_input v2.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xy
					dcl_output o1.zw
					dcl_output o2.x
					dcl_temps 2
					mul r0.xyzw, v0.yyyy, cb2[1].xyzw
					mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
					mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
					add r0.xyzw, r0.xyzw, cb2[3].xyzw
					mul r1.xyzw, r0.yyyy, cb3[18].xyzw
					mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
					mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
					min r1.x, r0.w, r0.z
					add r1.x, -r0.z, r1.x
					mad o0.z, cb1[5].y, r1.x, r0.z
					mov o0.xyw, r0.xyxw
					mad o1.xy, v2.xyxx, cb0[2].xyxx, cb0[2].zwzz
					mad o1.zw, v2.xxxy, cb0[3].xxxy, cb0[3].zzzw
					mad r0.x, -cb0[4].x, cb0[4].z, l(1.000000)
					mad r0.x, -cb0[4].y, cb0[4].z, r0.x
					mul o2.x, r0.x, l(0.500000)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_DEPTH" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float       
					// TEXCOORD                 2   x           2     NONE   float   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.x
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, r0.w, -v2.x
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "SHADOWS_CUBE" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// TEXCOORD                 1   xy          1     NONE   float   xy  
					// TEXCOORD                 3     zw        1     NONE   float       
					// TEXCOORD                 2   x           2     NONE   float   x   
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_sampler s0, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_input_ps linear v1.xy
					dcl_input_ps linear v2.x
					dcl_output o0.xyzw
					dcl_temps 1
					sample r0.xyzw, v1.xyxx, t0.xyzw, s0
					add r0.x, r0.w, -v2.x
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mov o0.xyzw, l(0,0,0,0)
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	CustomEditor "TMPro.EditorUtilities.TMP_SDFShaderGUI"
}