Shader "TextMeshPro/Distance Field Overlay" {
	Properties {
		_FaceTex ("Face Texture", 2D) = "white" {}
		_FaceUVSpeedX ("Face UV Speed X", Range(-5, 5)) = 0
		_FaceUVSpeedY ("Face UV Speed Y", Range(-5, 5)) = 0
		_FaceColor ("Face Color", Vector) = (1,1,1,1)
		_FaceDilate ("Face Dilate", Range(-1, 1)) = 0
		_OutlineColor ("Outline Color", Vector) = (0,0,0,1)
		_OutlineTex ("Outline Texture", 2D) = "white" {}
		_OutlineUVSpeedX ("Outline UV Speed X", Range(-5, 5)) = 0
		_OutlineUVSpeedY ("Outline UV Speed Y", Range(-5, 5)) = 0
		_OutlineWidth ("Outline Thickness", Range(0, 1)) = 0
		_OutlineSoftness ("Outline Softness", Range(0, 1)) = 0
		_Bevel ("Bevel", Range(0, 1)) = 0.5
		_BevelOffset ("Bevel Offset", Range(-0.5, 0.5)) = 0
		_BevelWidth ("Bevel Width", Range(-0.5, 0.5)) = 0
		_BevelClamp ("Bevel Clamp", Range(0, 1)) = 0
		_BevelRoundness ("Bevel Roundness", Range(0, 1)) = 0
		_LightAngle ("Light Angle", Range(0, 6.283185)) = 3.1416
		_SpecularColor ("Specular", Vector) = (1,1,1,1)
		_SpecularPower ("Specular", Range(0, 4)) = 2
		_Reflectivity ("Reflectivity", Range(5, 15)) = 10
		_Diffuse ("Diffuse", Range(0, 1)) = 0.5
		_Ambient ("Ambient", Range(1, 0)) = 0.5
		_BumpMap ("Normal map", 2D) = "bump" {}
		_BumpOutline ("Bump Outline", Range(0, 1)) = 0
		_BumpFace ("Bump Face", Range(0, 1)) = 0
		_ReflectFaceColor ("Reflection Color", Vector) = (0,0,0,1)
		_ReflectOutlineColor ("Reflection Color", Vector) = (0,0,0,1)
		_Cube ("Reflection Cubemap", Cube) = "black" {}
		_EnvMatrixRotation ("Texture Rotation", Vector) = (0,0,0,0)
		_UnderlayColor ("Border Color", Vector) = (0,0,0,0.5)
		_UnderlayOffsetX ("Border OffsetX", Range(-1, 1)) = 0
		_UnderlayOffsetY ("Border OffsetY", Range(-1, 1)) = 0
		_UnderlayDilate ("Border Dilate", Range(-1, 1)) = 0
		_UnderlaySoftness ("Border Softness", Range(0, 1)) = 0
		_GlowColor ("Color", Vector) = (0,1,0,0.5)
		_GlowOffset ("Offset", Range(-1, 1)) = 0
		_GlowInner ("Inner", Range(0, 1)) = 0.05
		_GlowOuter ("Outer", Range(0, 1)) = 0.05
		_GlowPower ("Falloff", Range(1, 0)) = 0.75
		_WeightNormal ("Weight Normal", Float) = 0
		_WeightBold ("Weight Bold", Float) = 0.5
		_ShaderFlags ("Flags", Float) = 0
		_ScaleRatioA ("Scale RatioA", Float) = 1
		_ScaleRatioB ("Scale RatioB", Float) = 1
		_ScaleRatioC ("Scale RatioC", Float) = 1
		_MainTex ("Font Atlas", 2D) = "white" {}
		_TextureWidth ("Texture Width", Float) = 512
		_TextureHeight ("Texture Height", Float) = 512
		_GradientScale ("Gradient Scale", Float) = 5
		_ScaleX ("Scale X", Float) = 1
		_ScaleY ("Scale Y", Float) = 1
		_PerspectiveFilter ("Perspective Correction", Range(0, 1)) = 0.875
		_VertexOffsetX ("Vertex OffsetX", Float) = 0
		_VertexOffsetY ("Vertex OffsetY", Float) = 0
		_MaskCoord ("Mask Coordinates", Vector) = (0,0,32767,32767)
		_ClipRect ("Clip Rect", Vector) = (-32767,-32767,32767,32767)
		_MaskSoftnessX ("Mask SoftnessX", Float) = 0
		_MaskSoftnessY ("Mask SoftnessY", Float) = 0
		_StencilComp ("Stencil Comparison", Float) = 8
		_Stencil ("Stencil ID", Float) = 0
		_StencilOp ("Stencil Operation", Float) = 0
		_StencilWriteMask ("Stencil Write Mask", Float) = 255
		_StencilReadMask ("Stencil Read Mask", Float) = 255
		_ColorMask ("Color Mask", Float) = 15
	}
	SubShader {
		Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Overlay" "RenderType" = "Transparent" }
		Pass {
			Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Overlay" "RenderType" = "Transparent" }
			Blend One OneMinusSrcAlpha, One OneMinusSrcAlpha
			ColorMask 0 -1
			ZTest Always
			ZWrite Off
			Cull Off
			Stencil {
				ReadMask 0
				WriteMask 0
				Comp Disabled
				Pass Keep
				Fail Keep
				ZFail Keep
			}
			Fog {
				Mode Off
			}
			GpuProgramID 13897
			Program "vp" {
				SubProgram "d3d11 " {
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1   xy          4     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					add r0.xy, v0.xyxx, cb0[23].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add r1.xyz, -r1.xyzx, cb1[4].xyzx
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mov o0.xyzw, r2.xyzw
					mov o1.xyzw, v2.xyzw
					mov o2.xy, v3.xyxx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.z, r2.xyzx, r2.xyzx
					rsq r0.z, r0.z
					mul r2.xyz, r0.zzzz, r2.xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r2.xyzx, r3.xyzx
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, |r2.xyxx|, cb0[28].yzyy
					div r2.xy, r2.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					mad r2.xy, cb0[27].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r2.xyxx
					div o4.zw, l(0.000000, 0.000000, 0.250000, 0.250000), r2.xxxy
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[28].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[28].w, l(1.000000)
					mul r2.x, |r1.w|, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mad r0.z, |r0.z|, r0.w, r2.x
					eq r0.w, cb3[8].w, l(0.000000)
					movc r2.y, r0.w, r0.z, r1.w
					ge r0.z, l(0.000000), v4.y
					and r0.z, r0.z, l(0x3f800000)
					add r0.w, -cb0[22].y, cb0[22].z
					mad r0.z, r0.z, r0.w, cb0[22].y
					mad r0.z, r0.z, l(0.250000), cb0[4].x
					mul r0.z, r0.z, cb0[22].w
					mul r2.w, r0.z, l(0.500000)
					mov o3.yw, r2.yyyw
					div r0.w, l(0.500000), r2.y
					mad r1.w, -cb0[6].x, cb0[22].w, l(1.000000)
					mad r1.w, -cb0[4].y, cb0[22].w, r1.w
					mad r1.w, r1.w, l(0.500000), -r0.w
					mad o3.x, -r0.z, l(0.500000), r1.w
					mad r0.z, -r0.z, l(0.500000), l(0.500000)
					add o3.z, r0.w, r0.z
					max r2.xyzw, cb0[26].xyzw, l(-20000000000.000000, -20000000000.000000, -20000000000.000000, -20000000000.000000)
					min r2.xyzw, r2.xyzw, l(20000000000.000000, 20000000000.000000, 20000000000.000000, 20000000000.000000)
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -r2.xyxx
					add o4.xy, -r2.zwzz, r0.xyxx
					mul r0.xyz, r1.yyyy, cb0[12].xyzx
					mad r0.xyz, cb0[11].xyzx, r1.xxxx, r0.xyzx
					mad o5.xyz, cb0[13].xyzx, r1.zzzz, r0.xyzx
					mul r0.x, v4.x, l(0.000244)
					round_ni r0.z, r0.x
					mad r0.w, -r0.z, l(4096.000000), v4.x
					mul r0.xy, r0.zwzz, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o6.xy, r0.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o6.zw, r0.xxxy, cb0[30].xxxy, cb0[30].zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_UI_ALPHACLIP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1   xy          4     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					add r0.xy, v0.xyxx, cb0[23].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add r1.xyz, -r1.xyzx, cb1[4].xyzx
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mov o0.xyzw, r2.xyzw
					mov o1.xyzw, v2.xyzw
					mov o2.xy, v3.xyxx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.z, r2.xyzx, r2.xyzx
					rsq r0.z, r0.z
					mul r2.xyz, r0.zzzz, r2.xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r2.xyzx, r3.xyzx
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, |r2.xyxx|, cb0[28].yzyy
					div r2.xy, r2.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					mad r2.xy, cb0[27].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r2.xyxx
					div o4.zw, l(0.000000, 0.000000, 0.250000, 0.250000), r2.xxxy
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[28].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[28].w, l(1.000000)
					mul r2.x, |r1.w|, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mad r0.z, |r0.z|, r0.w, r2.x
					eq r0.w, cb3[8].w, l(0.000000)
					movc r2.y, r0.w, r0.z, r1.w
					ge r0.z, l(0.000000), v4.y
					and r0.z, r0.z, l(0x3f800000)
					add r0.w, -cb0[22].y, cb0[22].z
					mad r0.z, r0.z, r0.w, cb0[22].y
					mad r0.z, r0.z, l(0.250000), cb0[4].x
					mul r0.z, r0.z, cb0[22].w
					mul r2.w, r0.z, l(0.500000)
					mov o3.yw, r2.yyyw
					div r0.w, l(0.500000), r2.y
					mad r1.w, -cb0[6].x, cb0[22].w, l(1.000000)
					mad r1.w, -cb0[4].y, cb0[22].w, r1.w
					mad r1.w, r1.w, l(0.500000), -r0.w
					mad o3.x, -r0.z, l(0.500000), r1.w
					mad r0.z, -r0.z, l(0.500000), l(0.500000)
					add o3.z, r0.w, r0.z
					max r2.xyzw, cb0[26].xyzw, l(-20000000000.000000, -20000000000.000000, -20000000000.000000, -20000000000.000000)
					min r2.xyzw, r2.xyzw, l(20000000000.000000, 20000000000.000000, 20000000000.000000, 20000000000.000000)
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -r2.xyxx
					add o4.xy, -r2.zwzz, r0.xyxx
					mul r0.xyz, r1.yyyy, cb0[12].xyzx
					mad r0.xyz, cb0[11].xyzx, r1.xxxx, r0.xyzx
					mad o5.xyz, cb0[13].xyzx, r1.zzzz, r0.xyzx
					mul r0.x, v4.x, l(0.000244)
					round_ni r0.z, r0.x
					mad r0.w, -r0.z, l(4096.000000), v4.x
					mul r0.xy, r0.zwzz, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o6.xy, r0.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o6.zw, r0.xxxy, cb0[30].xxxy, cb0[30].zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_UI_CLIP_RECT" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1   xy          4     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					add r0.xy, v0.xyxx, cb0[23].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add r1.xyz, -r1.xyzx, cb1[4].xyzx
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mov o0.xyzw, r2.xyzw
					mov o1.xyzw, v2.xyzw
					mov o2.xy, v3.xyxx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.z, r2.xyzx, r2.xyzx
					rsq r0.z, r0.z
					mul r2.xyz, r0.zzzz, r2.xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r2.xyzx, r3.xyzx
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, |r2.xyxx|, cb0[28].yzyy
					div r2.xy, r2.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					mad r2.xy, cb0[27].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r2.xyxx
					div o4.zw, l(0.000000, 0.000000, 0.250000, 0.250000), r2.xxxy
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[28].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[28].w, l(1.000000)
					mul r2.x, |r1.w|, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mad r0.z, |r0.z|, r0.w, r2.x
					eq r0.w, cb3[8].w, l(0.000000)
					movc r2.y, r0.w, r0.z, r1.w
					ge r0.z, l(0.000000), v4.y
					and r0.z, r0.z, l(0x3f800000)
					add r0.w, -cb0[22].y, cb0[22].z
					mad r0.z, r0.z, r0.w, cb0[22].y
					mad r0.z, r0.z, l(0.250000), cb0[4].x
					mul r0.z, r0.z, cb0[22].w
					mul r2.w, r0.z, l(0.500000)
					mov o3.yw, r2.yyyw
					div r0.w, l(0.500000), r2.y
					mad r1.w, -cb0[6].x, cb0[22].w, l(1.000000)
					mad r1.w, -cb0[4].y, cb0[22].w, r1.w
					mad r1.w, r1.w, l(0.500000), -r0.w
					mad o3.x, -r0.z, l(0.500000), r1.w
					mad r0.z, -r0.z, l(0.500000), l(0.500000)
					add o3.z, r0.w, r0.z
					max r2.xyzw, cb0[26].xyzw, l(-20000000000.000000, -20000000000.000000, -20000000000.000000, -20000000000.000000)
					min r2.xyzw, r2.xyzw, l(20000000000.000000, 20000000000.000000, 20000000000.000000, 20000000000.000000)
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -r2.xyxx
					add o4.xy, -r2.zwzz, r0.xyxx
					mul r0.xyz, r1.yyyy, cb0[12].xyzx
					mad r0.xyz, cb0[11].xyzx, r1.xxxx, r0.xyzx
					mad o5.xyz, cb0[13].xyzx, r1.zzzz, r0.xyzx
					mul r0.x, v4.x, l(0.000244)
					round_ni r0.z, r0.x
					mad r0.w, -r0.z, l(4096.000000), v4.x
					mul r0.xy, r0.zwzz, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o6.xy, r0.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o6.zw, r0.xxxy, cb0[30].xxxy, cb0[30].zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_UI_CLIP_RECT" "UNITY_UI_ALPHACLIP" }
					"!!vs_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// POSITION                 0   xyzw        0     NONE   float   xyzw
					// NORMAL                   0   xyz         1     NONE   float   xyz 
					// COLOR                    0   xyzw        2     NONE   float   xyzw
					// TEXCOORD                 0   xy          3     NONE   float   xy  
					// TEXCOORD                 1   xy          4     NONE   float   xy  
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float   xyzw
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float   xyz 
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					vs_4_0
					dcl_constantbuffer CB0[31], immediateIndexed
					dcl_constantbuffer CB1[7], immediateIndexed
					dcl_constantbuffer CB2[7], immediateIndexed
					dcl_constantbuffer CB3[21], immediateIndexed
					dcl_input v0.xyzw
					dcl_input v1.xyz
					dcl_input v2.xyzw
					dcl_input v3.xy
					dcl_input v4.xy
					dcl_output_siv o0.xyzw, position
					dcl_output o1.xyzw
					dcl_output o2.xy
					dcl_output o3.xyzw
					dcl_output o4.xyzw
					dcl_output o5.xyz
					dcl_output o6.xyzw
					dcl_temps 4
					add r0.xy, v0.xyxx, cb0[23].zwzz
					mul r1.xyzw, r0.yyyy, cb2[1].xyzw
					mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
					mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
					add r2.xyzw, r1.xyzw, cb2[3].xyzw
					mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
					add r1.xyz, -r1.xyzx, cb1[4].xyzx
					mul r3.xyzw, r2.yyyy, cb3[18].xyzw
					mad r3.xyzw, cb3[17].xyzw, r2.xxxx, r3.xyzw
					mad r3.xyzw, cb3[19].xyzw, r2.zzzz, r3.xyzw
					mad r2.xyzw, cb3[20].xyzw, r2.wwww, r3.xyzw
					mov o0.xyzw, r2.xyzw
					mov o1.xyzw, v2.xyzw
					mov o2.xy, v3.xyxx
					dp3 r2.x, v1.xyzx, cb2[4].xyzx
					dp3 r2.y, v1.xyzx, cb2[5].xyzx
					dp3 r2.z, v1.xyzx, cb2[6].xyzx
					dp3 r0.z, r2.xyzx, r2.xyzx
					rsq r0.z, r0.z
					mul r2.xyz, r0.zzzz, r2.xyzx
					dp3 r0.z, r1.xyzx, r1.xyzx
					rsq r0.z, r0.z
					mul r3.xyz, r0.zzzz, r1.xyzx
					dp3 r0.z, r2.xyzx, r3.xyzx
					mul r2.xy, cb1[6].yyyy, cb3[6].xyxx
					mad r2.xy, cb3[5].xyxx, cb1[6].xxxx, r2.xyxx
					mul r2.xy, |r2.xyxx|, cb0[28].yzyy
					div r2.xy, r2.wwww, r2.xyxx
					dp2 r0.w, r2.xyxx, r2.xyxx
					mad r2.xy, cb0[27].xyxx, l(0.250000, 0.250000, 0.000000, 0.000000), r2.xyxx
					div o4.zw, l(0.000000, 0.000000, 0.250000, 0.250000), r2.xxxy
					rsq r0.w, r0.w
					mul r1.w, |v4.y|, cb0[28].x
					mul r0.w, r0.w, r1.w
					mul r1.w, r0.w, l(1.500000)
					add r2.x, -cb0[28].w, l(1.000000)
					mul r2.x, |r1.w|, r2.x
					mad r0.w, r0.w, l(1.500000), -r2.x
					mad r0.z, |r0.z|, r0.w, r2.x
					eq r0.w, cb3[8].w, l(0.000000)
					movc r2.y, r0.w, r0.z, r1.w
					ge r0.z, l(0.000000), v4.y
					and r0.z, r0.z, l(0x3f800000)
					add r0.w, -cb0[22].y, cb0[22].z
					mad r0.z, r0.z, r0.w, cb0[22].y
					mad r0.z, r0.z, l(0.250000), cb0[4].x
					mul r0.z, r0.z, cb0[22].w
					mul r2.w, r0.z, l(0.500000)
					mov o3.yw, r2.yyyw
					div r0.w, l(0.500000), r2.y
					mad r1.w, -cb0[6].x, cb0[22].w, l(1.000000)
					mad r1.w, -cb0[4].y, cb0[22].w, r1.w
					mad r1.w, r1.w, l(0.500000), -r0.w
					mad o3.x, -r0.z, l(0.500000), r1.w
					mad r0.z, -r0.z, l(0.500000), l(0.500000)
					add o3.z, r0.w, r0.z
					max r2.xyzw, cb0[26].xyzw, l(-20000000000.000000, -20000000000.000000, -20000000000.000000, -20000000000.000000)
					min r2.xyzw, r2.xyzw, l(20000000000.000000, 20000000000.000000, 20000000000.000000, 20000000000.000000)
					mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), -r2.xyxx
					add o4.xy, -r2.zwzz, r0.xyxx
					mul r0.xyz, r1.yyyy, cb0[12].xyzx
					mad r0.xyz, cb0[11].xyzx, r1.xxxx, r0.xyzx
					mad o5.xyz, cb0[13].xyzx, r1.zzzz, r0.xyzx
					mul r0.x, v4.x, l(0.000244)
					round_ni r0.z, r0.x
					mad r0.w, -r0.z, l(4096.000000), v4.x
					mul r0.xy, r0.zwzz, l(0.001953, 0.001953, 0.000000, 0.000000)
					mad o6.xy, r0.xyxx, cb0[29].xyxx, cb0[29].zwzz
					mad o6.zw, r0.xxxy, cb0[30].xxxy, cb0[30].zzzw
					ret 
					// Approximately 0 instruction slots used"
				}
			}
			Program "fp" {
				SubProgram "d3d11 " {
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v2.xyxx, t0.xyzw, s2
					add r0.x, r0.w, -v3.x
					add r0.y, -r0.w, v3.z
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mul r0.x, cb0[6].x, cb0[22].w
					mul r0.x, r0.x, v3.y
					min r0.z, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					sqrt r0.z, r0.z
					mad_sat r0.w, r0.y, v3.y, r0.x
					mad r0.x, r0.y, v3.y, -r0.x
					mul r0.y, r0.z, r0.w
					mad r0.zw, cb0[4].zzzw, cb1[0].yyyy, v6.zzzw
					sample r1.xyzw, r0.zwzz, t2.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[5].xyzw
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.xyzx, cb0[3].xyzx
					mad r0.zw, cb0[2].xxxy, cb1[0].yyyy, v6.xxxy
					sample r3.xyzw, r0.zwzz, t1.xyzw, s0
					mul r2.xyz, r2.xyzx, r3.xyzx
					mul r3.w, r3.w, cb0[3].w
					mul r3.xyz, r2.xyzx, r3.wwww
					add r1.xyzw, r1.xyzw, -r3.xyzw
					mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw
					mul r0.y, cb0[4].y, cb0[22].w
					mul r0.z, r0.y, v3.y
					mad r0.y, r0.y, v3.y, l(1.000000)
					mad r0.x, r0.z, l(0.500000), r0.x
					div_sat r0.x, r0.x, r0.y
					add r0.x, -r0.x, l(1.000000)
					mul r0.xyzw, r0.xxxx, r1.xyzw
					mul o0.xyzw, r0.xyzw, v1.wwww
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_UI_ALPHACLIP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        4     NONE   float       
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[23], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v2.xyxx, t0.xyzw, s2
					add r0.x, r0.w, -v3.x
					add r0.y, -r0.w, v3.z
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mul r0.x, cb0[6].x, cb0[22].w
					mul r0.x, r0.x, v3.y
					min r0.z, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					sqrt r0.z, r0.z
					mad_sat r0.w, r0.y, v3.y, r0.x
					mad r0.x, r0.y, v3.y, -r0.x
					mul r0.y, r0.z, r0.w
					mad r0.zw, cb0[4].zzzw, cb1[0].yyyy, v6.zzzw
					sample r1.xyzw, r0.zwzz, t2.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[5].xyzw
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.xyzx, cb0[3].xyzx
					mad r0.zw, cb0[2].xxxy, cb1[0].yyyy, v6.xxxy
					sample r3.xyzw, r0.zwzz, t1.xyzw, s0
					mul r2.xyz, r2.xyzx, r3.xyzx
					mul r3.w, r3.w, cb0[3].w
					mul r3.xyz, r2.xyzx, r3.wwww
					add r1.xyzw, r1.xyzw, -r3.xyzw
					mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw
					mul r0.y, cb0[4].y, cb0[22].w
					mul r0.z, r0.y, v3.y
					mad r0.y, r0.y, v3.y, l(1.000000)
					mad r0.x, r0.z, l(0.500000), r0.x
					div_sat r0.x, r0.x, r0.y
					add r0.x, -r0.x, l(1.000000)
					mad r0.y, r1.w, r0.x, l(-0.001000)
					mul r1.xyzw, r0.xxxx, r1.xyzw
					mul o0.xyzw, r1.xyzw, v1.wwww
					lt r0.x, r0.y, l(0.000000)
					discard_nz r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_UI_CLIP_RECT" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v2.xyxx, t0.xyzw, s2
					add r0.x, r0.w, -v3.x
					add r0.y, -r0.w, v3.z
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mul r0.x, cb0[6].x, cb0[22].w
					mul r0.x, r0.x, v3.y
					min r0.z, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					sqrt r0.z, r0.z
					mad_sat r0.w, r0.y, v3.y, r0.x
					mad r0.x, r0.y, v3.y, -r0.x
					mul r0.y, r0.z, r0.w
					mad r0.zw, cb0[4].zzzw, cb1[0].yyyy, v6.zzzw
					sample r1.xyzw, r0.zwzz, t2.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[5].xyzw
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.xyzx, cb0[3].xyzx
					mad r0.zw, cb0[2].xxxy, cb1[0].yyyy, v6.xxxy
					sample r3.xyzw, r0.zwzz, t1.xyzw, s0
					mul r2.xyz, r2.xyzx, r3.xyzx
					mul r3.w, r3.w, cb0[3].w
					mul r3.xyz, r2.xyzx, r3.wwww
					add r1.xyzw, r1.xyzw, -r3.xyzw
					mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw
					mul r0.y, cb0[4].y, cb0[22].w
					mul r0.z, r0.y, v3.y
					mad r0.y, r0.y, v3.y, l(1.000000)
					mad r0.x, r0.z, l(0.500000), r0.x
					div_sat r0.x, r0.x, r0.y
					add r0.x, -r0.x, l(1.000000)
					mul r0.xyzw, r0.xxxx, r1.xyzw
					add r1.xy, -cb0[26].xyxx, cb0[26].zwzz
					add r1.xy, r1.xyxx, -|v4.xyxx|
					mul_sat r1.xy, r1.xyxx, v4.zwzz
					mul r1.x, r1.y, r1.x
					mul r0.xyzw, r0.xyzw, r1.xxxx
					mul o0.xyzw, r0.xyzw, v1.wwww
					ret 
					// Approximately 0 instruction slots used"
				}
				SubProgram "d3d11 " {
					Keywords { "UNITY_UI_CLIP_RECT" "UNITY_UI_ALPHACLIP" }
					"!!ps_4_0
					//
					// Generated by Microsoft (R) D3D Shader Disassembler
					//
					//
					// Input signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_POSITION              0   xyzw        0      POS   float       
					// COLOR                    0   xyzw        1     NONE   float   xyzw
					// TEXCOORD                 0   xy          2     NONE   float   xy  
					// TEXCOORD                 1   xyzw        3     NONE   float   xyz 
					// TEXCOORD                 2   xyzw        4     NONE   float   xyzw
					// TEXCOORD                 3   xyz         5     NONE   float       
					// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
					//
					//
					// Output signature:
					//
					// Name                 Index   Mask Register SysValue  Format   Used
					// -------------------- ----- ------ -------- -------- ------- ------
					// SV_Target                0   xyzw        0   TARGET   float   xyzw
					//
					ps_4_0
					dcl_constantbuffer CB0[27], immediateIndexed
					dcl_constantbuffer CB1[1], immediateIndexed
					dcl_sampler s0, mode_default
					dcl_sampler s1, mode_default
					dcl_sampler s2, mode_default
					dcl_resource_texture2d (float,float,float,float) t0
					dcl_resource_texture2d (float,float,float,float) t1
					dcl_resource_texture2d (float,float,float,float) t2
					dcl_input_ps linear v1.xyzw
					dcl_input_ps linear v2.xy
					dcl_input_ps linear v3.xyz
					dcl_input_ps linear v4.xyzw
					dcl_input_ps linear v6.xyzw
					dcl_output o0.xyzw
					dcl_temps 4
					sample r0.xyzw, v2.xyxx, t0.xyzw, s2
					add r0.x, r0.w, -v3.x
					add r0.y, -r0.w, v3.z
					lt r0.x, r0.x, l(0.000000)
					discard_nz r0.x
					mul r0.x, cb0[6].x, cb0[22].w
					mul r0.x, r0.x, v3.y
					min r0.z, r0.x, l(1.000000)
					mul r0.x, r0.x, l(0.500000)
					sqrt r0.z, r0.z
					mad_sat r0.w, r0.y, v3.y, r0.x
					mad r0.x, r0.y, v3.y, -r0.x
					mul r0.y, r0.z, r0.w
					mad r0.zw, cb0[4].zzzw, cb1[0].yyyy, v6.zzzw
					sample r1.xyzw, r0.zwzz, t2.xyzw, s1
					mul r1.xyzw, r1.xyzw, cb0[5].xyzw
					mul r1.xyz, r1.wwww, r1.xyzx
					mul r2.xyz, v1.xyzx, cb0[3].xyzx
					mad r0.zw, cb0[2].xxxy, cb1[0].yyyy, v6.xxxy
					sample r3.xyzw, r0.zwzz, t1.xyzw, s0
					mul r2.xyz, r2.xyzx, r3.xyzx
					mul r3.w, r3.w, cb0[3].w
					mul r3.xyz, r2.xyzx, r3.wwww
					add r1.xyzw, r1.xyzw, -r3.xyzw
					mad r1.xyzw, r0.yyyy, r1.xyzw, r3.xyzw
					mul r0.y, cb0[4].y, cb0[22].w
					mul r0.z, r0.y, v3.y
					mad r0.y, r0.y, v3.y, l(1.000000)
					mad r0.x, r0.z, l(0.500000), r0.x
					div_sat r0.x, r0.x, r0.y
					add r0.x, -r0.x, l(1.000000)
					mul r0.xyzw, r0.xxxx, r1.xyzw
					add r1.xy, -cb0[26].xyxx, cb0[26].zwzz
					add r1.xy, r1.xyxx, -|v4.xyxx|
					mul_sat r1.xy, r1.xyxx, v4.zwzz
					mul r1.x, r1.y, r1.x
					mad r1.y, r0.w, r1.x, l(-0.001000)
					mul r0.xyzw, r0.xyzw, r1.xxxx
					mul o0.xyzw, r0.xyzw, v1.wwww
					lt r0.x, r1.y, l(0.000000)
					discard_nz r0.x
					ret 
					// Approximately 0 instruction slots used"
				}
			}
		}
	}
	Fallback "TextMeshPro/Mobile/Distance Field"
	CustomEditor "TMPro.EditorUtilities.TMP_SDFShaderGUI"
}